{"version":3,"file":"lycabinet.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,YAAa,GAAIH,GACE,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,IARtB,CASGK,MAAM,WACT,M,mBCTA,IAAIC,EAAsB,CCA1BA,EAAwB,CAACL,EAASM,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAER,EAASO,IAC5EE,OAAOC,eAAeV,EAASO,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,4BCS3E,MAAMI,EAAa,SAAUC,EAAKC,GAEvC,QAAmBC,IAAfF,EADJC,GAASD,EAAIG,OAASF,GAASD,EAAIG,QAGjC,MADAC,QAAQC,IAAIL,EAAKC,GACX,IAAIK,MAAM,aAAaL,cAAkBD,EAAIO,6BAErD,OAAOP,EAAIC,IASN,SAASO,EAASC,EAAgBC,GACvC,IAAIC,EAAUF,EAAQG,EAAO,GAC7B,IAAI,IAAIX,EAAM,EAAGA,EAAMS,EAAUP,OAAQF,IAGvC,GAFAW,EAAOF,EAAUT,GACjBU,EAAUA,GAAWA,EAAQC,QACd,IAAZD,EACD,OAGJ,OAAOA,EA4CF,MAAME,EAAmB,MAC9B,MAAMC,EAAyB,GAO/B,OANAC,OAAOC,iBAAiB,WAAYC,IAClCH,EAAYI,SAAQC,IAClBA,EAAKF,SAEN,GAEI,CAACG,EAAQC,GAAS,KACpBA,EACDC,EAAgBR,EAAaM,GAC1BN,EAAYS,KAAKH,KAXM,GAoBnBI,EAAa,YAAaC,GACrC,IAAIC,EAYJ,OAXAD,EAAKE,QAAO,CAACC,EAAQnB,KACnB,IAAK,IAAIG,KAAQH,EACTmB,EAAOhB,IAASiB,EAAeD,EAAOhB,IAG1CY,EAAWI,EAAOhB,GAAOH,EAAOG,IAFhCgB,EAAOhB,GAAQH,EAAOG,GAM1B,OADAc,EAASE,EACFA,IACNH,EAAK,IACDC,GA4BF,SAASI,EAAoDF,EAAgBG,GAClF,IAAIH,EAAQ,OAAOG,EACnB,IAAIC,EAAmB,KACvB,IAAK,IAAIpB,KAAQmB,EAEf,GADAC,EAAWJ,EAAwBhB,GAC/BqB,EAAWD,GAAU,CACvB,IAAKH,EAAeG,GAAoB,SACxCF,EAAeE,EAAmBD,EAAWnB,SAI5CgB,EAAwBhB,GAAQmB,EAAWnB,GAEhD,OAAOgB,EA+BF,MAAMK,EAAcC,GAAuB,MAACA,EAEtCL,EAAkBnC,GAAkE,oBAAxCJ,OAAOM,UAAUW,SAAST,KAAKJ,GAG3EyC,EAAezC,GAA0BA,aAAe0C,SAc9D,IAAId,EAAkB,CAACtB,EAAKY,KACjC,GAAIZ,EAAIG,OAAQ,CACd,IAAIF,EAAQD,EAAIqC,QAAQzB,GACxB,GAAIX,GAAS,EACX,OAAOD,EAAIsC,OAAOrC,EAAO,KCzM/B,IAEMsC,EAAO,OACPC,EAAU,UCChB,IAAIC,EAA2B,KAyD/B,SAASC,EAAYjC,EAAgBkC,GAAU,EAAMC,GAAa,GAChE,MAAMC,EAA4B,GAE5BC,EAAWd,IACfa,EAAcE,QAAQf,GACtB,IAAI,IAAIpB,KAAQoB,EACXH,EAAeG,EAAQpB,KACxBkC,EAAQd,EAAQpB,KAatB,OATAkC,EAAQrC,GACRoC,EAAc3B,SAAQ,CAACN,EAAMX,EAAOD,KAClC,IAAI,IAAIgD,KAAOpC,EAEViB,EAAejB,EAAKoC,MACrBhD,EAAIC,GAAO+C,GAAOC,EAAQrC,EAAKoC,GAAML,EAAWC,OAG7CK,EAAQxC,EAAQkC,EAAWC,GAWtC,SAASK,EAAQxC,EAAgBkC,GAAY,EAAOC,GAAe,GACjE,IAAIM,EAA4B5D,OAAO6D,OAAO,MAE9CD,EAAuB,QAAI,KAE3B,MAAME,EAAe,CAACC,EAAmBC,SACVpD,IAA1BgD,EAAcI,IAIVJ,EAAcI,GAAQD,QAAQ9B,KAAK8B,GAEtCE,EAAkB,CAACC,EAAkBF,SACZpD,IAA1BgD,EAAcI,IAIVhC,EAAgB4B,EAAcI,GAAQD,QAASG,GAElDC,EAAa,CACjBjE,YAAY,EACZkE,cAAc,EACdC,UAAU,GAGZ,IAAI,IAAIC,KAAWnD,EACjByC,EAAcU,GAAW,CACvBC,MAAOpD,EAAOmD,GACdP,QAAS,IA+Cb,MA3CA,CAAC,eAAgB,mBAAmBnC,SAAQ,CAAC4C,EAAM7D,KACjDiD,EAAcY,GAAQ,CAACD,MAAO,MAC9BvE,OAAOC,eAAe2D,EAAcY,GAAO,QAAS,CAClDD,MAAQ5D,EAAqBsD,EAAdH,KACZK,OAuCA,IAAIM,MAAMtD,EAnCG,CAClBhB,IAAG,CAACmC,EAAQjC,EAAMqE,SAGa9D,IAAtBgD,EAAcvD,QAAmBO,EAAWgD,EAAcvD,GAAMkE,MAEzEI,IAAIrC,EAAQjC,EAAMuE,EAAUF,GAG1Bd,EAAcvD,GAAQuD,EAAcvD,IAAS,CAC3CkE,MAAOK,EACPb,QAAS,IAEX,IAAIc,EAAWjB,EAAcvD,GAAMkE,MAanC,GAXGlB,EACEd,EAAeqC,KAEdhB,EAAcvD,GAAMkE,MADnBjB,EAC2BK,EAAQiB,GAAU,GAAO,GAEzBxB,EAAYwB,EAAUvB,GAAW,IAIjEO,EAAcvD,GAAMkE,MAAQK,EAE3BC,IAAaD,EAAS,CACvB,IAAIE,EAAWlB,EAAcvD,GAAM0D,QACnC,IAAI,IAAIpD,EAAM,EAAGA,EAAOmE,EAASjE,OAAQF,IACvCmE,EAASnE,GAAOkE,EAAUD,GAG9B,OAAO,KC/Jb,MAAMG,EAAgB,kBCYtB,SAASC,IAAqB,2BAARC,EAAQ,yBAARA,EAAQ,gBAK5BC,KAAKC,MAAMC,MAAMF,KAAMD,IClBlB,SAAmBD,GACxB,MAAMK,EAAYrF,OAAO6D,OAAO,MAEhCmB,EAAU1E,UAAUgF,SAAW,WAC7B,OAAO3C,EAAW0C,EAAUH,KAAKK,UAAYhD,EAAe8C,EAAUH,KAAKK,UAQ7EP,EAAU1E,UAAUkF,SAAW,WAC7B,OAAOH,EAAUH,KAAKK,SAOxBP,EAAU1E,UAAUmF,SAAW,SAASC,GACtCL,EAAUH,KAAKK,QAAUG,GAM3BV,EAAU1E,UAAUqF,YAAc,WAChCN,EAAUH,KAAKK,aAAU,GAG3BP,EAAUY,aAAe,SAASvG,GAChCgG,EAAUhG,QAAQ,GDXtBwG,CAAUb,GEtBH,SAAyBA,GAC9B,MAAMc,EAAgB9F,OAAO6D,OAAO,MAEpCmB,EAAU1E,UAAUyF,IAAM,SAASC,EAAMnE,GACvC,IAAIgB,EAAYhB,GACd,MAAM,IAAIb,MAAM,8EAEF8E,EAAcE,KAAUF,EAAcE,GAAQ,KACtD/D,KAAKJ,IAGfmD,EAAU1E,UAAU2F,KAAO,SAASD,EAAM9B,GACxC,MAAMgC,EAAUJ,EAAcE,KAAUF,EAAcE,GAAQ,IAC9DhE,EAAgBkE,EAAShC,IAG3Bc,EAAU1E,UAAU6F,SAAW,SAASH,KAASI,GAC/C,MAAMF,EAAUJ,EAAcE,KAAUF,EAAcE,GAAQ,IAIxDK,EAAyB,GAC/BD,EAAOnE,KAAKoE,GACZ,IAAI,IAAI1F,EAAM,EAAGA,EAAOuF,EAAQrF,OAAQF,IAAQ,CAC9C,IAAI2F,EAAOJ,EAAQvF,GAAOyE,MAAMF,KAAMkB,GACtCE,GAAQD,EAAQpE,KAAMqE,GAGxB,OAAOD,EAAQxF,OAAQJ,EAAW4F,GAAU,GAAID,EAAOvF,OAAQJ,EAAW2F,GAAS,GAAI,MAIzFpB,EAAU1E,UAAUiG,MAAQ,SAASP,EAAMnE,GACzC,MAAM2E,EAAQtB,KACd,IAAIuB,EAAa,YAAYL,GAC3BvE,EAAKuD,MAAMoB,EAAOJ,GAClBI,EAAMP,KAAKD,EAAMS,IAEnBvB,KAAKa,IAAIC,EAAMS,IAKOzB,EAAU1E,UAAUoG,QAAU,WAapD,IAAIC,IAAI3G,OAAO4G,KAAKd,GAAee,OAZnB,CACd,UAAU,UACV,aAAc,kBAAmB,cAAe,SAChD,gBACA,UAAW,YAAa,gBACxB,UAAW,aACX,WACA,aAAc,kBAAmB,aAAc,QAAS,OACxD,cAAe,mBAAoB,eAAgB,UACnD,WAGmDjF,SAAQN,IAC3D,IAAIwF,EAAahB,EAAcxE,IAASwE,EAAcxE,GAAMyF,WACzDD,GACD5B,KAAKe,KAAK3E,EAAMwF,GAGlB,MAAME,EAAY,KAChBlG,QAAQC,IAAI,sCAAsCO,OAEpD4D,KAAKa,IAAIzE,EAAM0F,GAEflB,EAAcxE,GAAMyF,WAAaC,MF5CvCC,CAAgBjC,GGTT,SAAkBA,GAOvBA,EAAU1E,UAAU6E,MAAQ,SAAS9F,EAAc4F,EAAmC,IAEpF,GAAGA,EAAQiC,cAAgB3E,EAAe0C,EAAQiC,aAChD,MAAM,IAAIlG,MAAM,gFAElB,GP0J+D,iBAAzCmG,EO1JP9H,IP0J6D8H,EAAIC,aAAeC,OOzJ7F,MAAM,IAAIrG,MAAM,uEAAuE3B,MPyJpE,IAAC8H,EOxJtBjC,KAAKK,QAAUlG,GAAQ,aAAe,GAGtC,MAAMiI,EAAiB,CACrBjI,KAAM6F,KAAKK,OACXgC,UAAU,EACVC,aAAgBvC,EAAQuC,YAAyB,IACjDC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,kBAAkB,EAClBC,cAAc,EAEdC,eAAgB,CACdC,SAAUtG,OAAOuG,aACjBC,QAAS,UACTC,QAAS,UACTC,WAAY,cAIdC,cAAenD,EAAQoD,WAAapD,EAAQqD,WAAarD,EAAQsD,YAEjEF,UAAW,EAAEhJ,EAAMqG,GAAU8C,EAASC,KAGpCD,EADW,KAGbF,UAAW,EAAEjJ,EAAMqG,GAAU8C,EAASC,KAEpCD,KAEFD,WAAY,EAAElJ,EAAMqG,GAAU8C,EAASC,KAErCD,MAGJtD,KAAKD,QAAU/C,EAAWoF,EAAgBrC,GAC1CC,KAAKwD,UAAUxD,KAAKD,SAGjBC,KAAKD,QAAQ0C,UAAUzC,KAAKwB,UAE/BxB,KAAKyD,ONzEO,UM0EZzD,KAAKiB,SAAS,WAEXjB,KAAKD,QAAQsC,UAAUrC,KAAK0D,OAAO3D,EAAQiC,aAAelH,OAAO6D,OAAO,QAQ7EmB,EAAU1E,UAAUsI,OAAS,SAASlD,EAAU1F,OAAO6D,OAAO,OAE5D,MAAMgF,EAAgB,WPmGF,IAACC,EAJA1I,GAIA0I,EOlGP5D,KAAK6D,iBP8FE3I,EAMX0I,EANqCE,MAAMC,SAAWD,MAAMC,QAAQ7I,IAAQA,aAAe4I,OAAyB,iBAAR5I,GAAyE,UAApDJ,OAAOM,UAAUW,SAAST,KAAKJ,GAAK8I,OAAO,GAAG,GAOhLJ,EAAuBjI,OAExBb,OAAO4G,KAAK,GAAiB/F,UOrGnCqB,EAAWgD,KAAKiE,UAAWjE,KAAK6D,eAChC7D,KAAK6D,cAAgB/I,OAAO6D,OAAO,MACnCqB,KAAKiB,SAAS,mBAyBhB,OAvBAjB,KAAKa,IAAI,SAAU8C,GACnB3D,KAAKa,IAAI,UAAW8C,GAIjB3D,KAAKD,QAAQ2C,kBAAoB1C,KAAKI,YAEvCJ,KAAKiE,UAAYjE,KAAKM,WAEtBxF,OAAOoJ,OAAO1D,EAASR,KAAKiE,WAC5BjE,KAAKiB,SAAS,mBAGdjB,KAAKiE,UAAYjE,KAAKiE,WAAazD,EAChCR,KAAKD,QAAQ4C,cACd3C,KAAKO,SAASP,KAAKiE,WAElBjE,KAAKD,QAAQsC,SAAUrC,KAAKmE,MAAK,GAC/BnE,KAAKyD,OAAS,GAGrBzD,KAAKyD,ONjHO,UMkHZzD,KAAKiB,SAAS,WACPjB,MAMTF,EAAU1E,UAAUgJ,SAAW,WAC7B,OAAOpE,KAAKyD,SAAS,GASvB3D,EAAU1E,UAAUqE,IAAM,SAAS7E,EAAKyE,GAGtC,MAFoB,CAAC,ENhIR,YMkIExB,QAAQmC,KAAKyD,SAAW,GACrCzD,KAAKiB,SAAS,aACdjB,KAAK6D,cAAgB7D,KAAK6D,gBAAkB7D,KAAK6D,cAAgB/I,OAAO6D,OAAO,OAC/EqB,KAAK6D,cAAcjJ,GAAOyE,EACnBW,OAGTA,KAAKiE,UAAUrJ,GAAOyE,EACtBW,KAAKiB,SAAS,UAAWrG,EAAKyE,GACvBW,OAQTF,EAAU1E,UAAUH,IAAM,SAASL,GACjC,IAAIyJ,EAAYrE,KAAKiE,UAAUrJ,GAE/B,OADAoF,KAAKiB,SAAS,UAAWrG,EAAKyJ,GACvBA,GAMTvE,EAAU1E,UAAUyB,OAAS,SAAS6E,GACpC,IAAI4C,GAAU,EPiDX,IAAuBC,EAAO5H,EOxCjC,OPwCiCA,EOhDZ6H,IAEhBxE,KAAKiE,UAAU5I,eAAemJ,KAC/BxE,KAAKP,IAAI+E,OAAG,GACZF,GAAU,KP4CYC,EOhDZ7C,GPiDNhF,QACD6H,EAAM7H,QAAQC,GAEdA,EAAK4H,GO7CZvE,KAAKiB,SAAS,aAAcS,EAAM4C,GAC3BtE,MASTF,EAAU1E,UAAUqJ,MAAQ,SAASC,EAAwB,KAAMC,EAA2B,MAE5FA,EAAalH,EAAWkH,GAAaA,EAAY3E,KAAKD,QAAQmD,YAC9DwB,EAAUjH,EAAWiH,GAAUA,IAAW1E,KAAKD,QAAQsD,WACvDrD,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,eAGd,IAAI2D,EAAa,KACf,MAAMC,EAAcH,IAAYC,EAGhC,GAFA3E,KAAKiB,SAAS,mBAAoB4D,GAE/BA,EAED,OAAO7E,KAET,MAAM8E,EAAW9E,KAAKD,QAAQ6C,eAC9BkC,EAASjC,SAASiC,EAAS7B,YAAajD,KAAKK,QAE7CL,KAAKiB,SAAS,eAAgBjB,KAAKK,SAIrC,MAAM0E,EAAO,CAAC/E,KAAKK,OAAQL,KAAKiE,WAC1Be,EAAY,KAChBhF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,UAAWyD,EAASC,IAE9BM,EAAU,CAACC,EAAKC,EAAO,MAC3BnF,KAAKiB,SAAS,QAAS,QAAS,iBAAkBkE,GAClDnF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,UAAWyD,EAASC,GAClC/I,QAAQ2H,MAAM,6CAA6CvD,KAAKK,qBAAqB6E,MAIvF,IACEN,IACGF,EACD1E,KAAKD,QAAQsD,WAAW0B,EAAMC,EAAWC,IAEzCjF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,UAAWyD,EAASC,IAEpC,MAAMS,GACNH,EAAQG,EAAG,WAEb,OAAOpF,MAUTF,EAAU1E,UAAU+I,KAAO,SAASkB,GAAY,EAAOX,EAAwB,KAAMC,EAA2B,MAE9GA,EAAalH,EAAWkH,GAAaA,EAAY3E,KAAKD,QAAQmD,YAC9DwB,EAAUjH,EAAWiH,GAAUA,IAAW1E,KAAKD,QAAQoD,UACvDnD,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,cAGd,IAAIqE,EAAY,KACd,IAAIC,EAAY,KAChB,MAAMV,EAAcH,IAAYC,EAGhC,GAFA3E,KAAKiB,SAAS,kBAAmB4D,GAE9BA,EAED,OAAO7E,KAET,MAAM8E,EAAW9E,KAAKD,QAAQ6C,eAE9B,IAAI4C,EAAcV,EAASjC,SAASiC,EAAS/B,SAAU/C,KAAKK,QAE5DmF,EAAcxF,KAAKiB,SAAS,cAAeuE,GAE3CD,EAAYE,KAAKC,MAAOF,GACrBH,EACDrI,EAAWgD,KAAKiE,UAAWsB,GAE3BzK,OAAOoJ,OAAOlE,KAAKiE,UAAWsB,IAIlC,MAAMR,EAAO,CAAC/E,KAAKK,OAAQL,KAAKiE,WAC1Be,EAAaW,IACjB,IAAIlI,EAAWkI,KAAUtI,EAAesI,GACtC,MAAM,IAAI7J,MAAM,oEAAoE6J,GAEnFN,EACDrI,EAAWgD,KAAKiE,UAAW0B,GAG3B7K,OAAOoJ,OAAOlE,KAAKiE,UAAW0B,GAChC3F,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,SAAUyD,EAASC,IAE7BM,EAAU,CAACC,EAAKC,EAAO,MAC3BnF,KAAKiB,SAAS,QAAS,OAAQ,gBAAiBkE,GAChDnF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,SAAUyD,EAASC,GACjC/I,QAAQ2H,MAAM,4CAA4CvD,KAAKK,qBAAqB6E,MAItF,IACEI,IACGZ,EACD1E,KAAKD,QAAQoD,UAAU4B,EAAMC,EAAWC,IAExCjF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,SAAUyD,EAASC,IAEnC,MAAMS,GACNH,EAAQG,EAAG,WAEb,OAAOpF,MAQTF,EAAU1E,UAAUwK,KAAO,SAASlB,EAAwB,KAAMC,EAA2B,MAE3F,IAAIkB,EAAQ7F,KAAKD,QAAQwC,YAAcvC,KAAKoE,WAE5C,GADApE,KAAKiB,SAAS,aAAc4E,GACxBA,EAIF,OAFA7F,KAAKiB,SAAS,QACdjB,KAAKD,QAAQyC,UAAYxC,KAAK8F,SAASpB,EAASC,GACzC3E,KAIT0E,EAAUjH,EAAWiH,GAAUA,IAAW1E,KAAKD,QAAQqD,UACvDuB,EAAalH,EAAWkH,GAAaA,EAAY3E,KAAKD,QAAQmD,YAC9DlD,KAAKyD,ON9TM,SMiUX,IAAIsC,EAAY,KACd,MAAMlB,EAAcH,IAAYC,EAGhC,GAFA3E,KAAKiB,SAAS,kBAAmB4D,GAE9BA,EAED,OAAO7E,KAET,MAAM8E,EAAW9E,KAAKD,QAAQ6C,eAE9B,IAAIoD,EAAYP,KAAKQ,UAAUjG,KAAKiE,WAEpC+B,EAAYhG,KAAKiB,SAAS,aAAc+E,GAExClB,EAASjC,SAASiC,EAAS9B,SAAShD,KAAKK,OAAQ2F,IAKnD,MAAMjB,EAAO,CAAC/E,KAAKK,OAAQL,KAAKiE,WAC1Be,EAAY,KAChBhF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,QAASyD,EAASC,IAE5BM,EAAU,CAACC,EAAKC,EAAO,kBAC3BnF,KAAKiB,SAAS,QAAS,OAAQkE,GAC/BnF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,QAASyD,EAASC,GAChC/I,QAAQ2H,MAAM,4CAA4CvD,KAAKK,qBAAqB6E,MAItF,IACEa,IACGrB,EACD1E,KAAKD,QAAQqD,UAAU2B,EAAMC,EAAWC,IAExCjF,KAAKyD,OAAS,EACdzD,KAAKiB,SAAS,QAASyD,EAASC,IAElC,MAAMS,GACNH,EAAQG,EAAG,WAEb,OAAOpF,MAQTF,EAAU1E,UAAUsB,QAAU,SAASwJ,GACrC,IAAI9J,EAAMX,EAAQ,EAClB,IAAI,IAAIb,KAAOoF,KAAKiE,UAClB7H,EAAO4D,KAAKiE,UAAUrJ,GACtBsL,EAAS9J,EAAMX,MASnBqE,EAAU1E,UAAU+K,IAAM,SAASD,GACjC,IAAI9J,EAAMX,EAAQ,EAClB,IAAI,IAAIb,KAAOoF,KAAKiE,UAClB7H,EAAO4D,KAAKiE,UAAUrJ,GACtBoF,KAAKiE,UAAUrJ,GAAOsL,EAAS9J,EAAMX,MH/W3C2K,CAAStG,GI1BF,SAA4BA,GAMF,IACzBuG,EADNvG,EAAU1E,UAAU0K,UACdO,EAAW,EACR,YAAYnF,GACjB,IAAIoF,GAAU,IAAIC,MAAOC,UAEzB,IAAIC,EAAQH,EAAUD,EAAW,IAQjC,OAPArG,KAAKiB,SAAS,WAAYwF,GACtBA,IACFJ,EAAWC,EAEX1K,QAAQC,IAAI,iBAAkByK,EAASD,EAAUI,GACjDzG,KAAK4F,QAAQ1E,IAERlB,OAUXF,EAAU1E,UAAUsL,QAAU,SAAS9L,EAAKyE,KAAU6B,GAEpD,OADAlB,KAAKP,IAAI7E,EAAKyE,GAAOyG,YAAY5E,GAC1BlB,MJJX2G,CAAmB7G,GK5BZ,SAAmBA,GACxBA,EAAU1E,UAAUwL,QAAU,GAE9B9G,EAAU+G,MAAQ,SAAUC,GAE1B,OADAhH,EAAU1E,UAAUwL,QAAQ7J,KAAK+J,GAC1B9G,MAGTF,EAAU1E,UAAUoI,UAAY,YAAYzD,GAC1CA,EAAQxB,QAAQyB,MAChBF,EAAU1E,UAAUwL,QAAQlK,SAAQC,IAClCA,EAAKuD,MAAMvD,EAAMoD,OLkBvBgH,CAAUjH,GMrBH,SAAuBA,GAE5BA,EAAUkH,QAAU,SAASC,EAAYlH,GAEvCD,EAAU+G,OAAM,SAASK,GAEvB5J,EAAe4J,EAAanH,QAAS,CACnCoH,WAAW,CAETC,aAAc,KAKlBH,EAAWI,aACT,CACEvG,KAAMoG,EAAa7G,OAAO,YAE1BiH,MAAM,EAENC,UAAU,EAEVvG,QAAS,IAAIE,KACXgG,EAAatB,QAAQ1E,SAW7BpB,EAAU1E,UAAU0K,SAAW,YAAY5E,GAIzC,OAHAA,EAAO3C,QAAQ,GAAGyB,KAAKK,mBAEvB4G,EAAWO,OAAOtG,EAAQlB,KAAKD,QAAQoH,WAAWC,aAC3CpH,ONfbyH,CAAc3H,GO7BP,SAAmBA,GAExBA,EAAU1E,UAAUsM,OAAS5H,EAAU1E,UAAUyB,OAEjDiD,EAAU1E,UAAUuM,KAAO7H,EAAU1E,UAAUH,IAE/C6E,EAAU1E,UAAUwM,QAAU9H,EAAU1E,UAAUkF,SAElDR,EAAU1E,UAAUyM,WAAa/H,EAAU1E,UAAUkF,SPsBvDwH,CAAUhI,GQ3BH,SAAmBA,GAMxBA,EAAU+G,OAAM,SAASkB,GACvB,MAAMC,EAAMD,EAAWhI,QACpBiI,EAAIC,UAAYD,EAAIE,SACrBlI,KAAKmI,YAEL7K,EAAe0K,EAAK,CAClBC,SAAU,GACVC,SAAU,QAKhBpI,EAAU1E,UAAU+M,UAAY,WAC9B,MAAM7G,EAAQtB,KACdlF,OAAOC,eAAeiF,KAAKM,WAAY,SAAU,CAC/CpB,cAAc,EACdlE,YAAY,EACZqE,MAAO,WACLzD,QAAQC,IAAIyF,GAEZ,IAAI8G,EAAWtN,OAAO6D,OAAO,MAE7B,GAAG2C,EAAMvB,QAAQkI,SAAStM,OAAO,EAAE,CACjC,IAAI0M,EAA0B,GAC9B/G,EAAMvB,QAAQkI,SAASvL,SAAS,CAAC4L,EAAc7M,KAC7C,IAAI+B,EAAU6K,EAAe5M,GAAS6M,EAAcC,MAAM,KACtDC,EAAiBlH,EAAM2C,UAC3BzG,EAAQd,SAAQ,CAACN,EAAMqM,KACrBD,EAAiBA,EAAehL,EAAQiL,IAEpCA,EAAG,EAAIjL,EAAQ7B,QAAU8B,EAAY+K,GACnC/K,EAAW2K,EAAS5K,EAASiL,KAG/B3N,OAAOoJ,OAAOkE,EAAS5K,EAAQiL,IAAKD,GAFpCJ,EAAS5K,EAAQiL,IAAM,GAIzBL,EAAS5K,EAAQiL,IAAMD,aAIzB1N,OAAOoJ,OAAOkE,EAAU9G,EAAM2C,WAEpC,IAAIyE,EAA+B,GAiBnC,OAhBApH,EAAMvB,QAAQmI,SAASxL,SAAS,CAAC4L,EAAe7M,EAAOD,KACrD,IAAIgC,EAAUkL,EAAejN,GAAS6M,EAAcC,MAAM,KACtDC,EAAiBJ,EAErB,IAAI,IAAIK,EAAE,EAAGA,EAAEjL,EAAQ7B,QACjB8B,EAAW2K,EAAS5K,EAAQ,MAE7BC,EAAW+K,EAAehL,EAAQiL,KAHRA,IAI3BD,EAAiBA,EAAehL,EAAQiL,IAIvCA,IAAMjN,EAAIG,OAAO,IAClB6M,OAAiB,MAGhBJ,MRpCfO,CAAU7I,GFtBH,SAAqBA,GAC1BA,EAAU1E,UAAUwN,aAAe,SAAS7I,EAAe,IAEzDzC,EAAeyC,EAAS,CACtB8I,MAAM,EACNC,WAAW,EACX3K,WAAW,EACXC,cAAc,IAIhB,MAAMkD,EAAQtB,KAMd,GALA/B,EAAW,KACTqD,EAAML,SAAS,WACflB,EAAQ8I,KAAMvH,EAAMwE,WAAYxE,EAAMsE,SAGpC7F,EAAQ+I,UAAW,OAAO,EAE9B9I,KAAKiE,UAAY/F,EAAY8B,KAAKiE,UAAWlE,EAAQ5B,UAAW4B,EAAQ3B,cACxE4B,KAAKO,SAASP,KAAKiE,YAIrBnE,EAAUiJ,KAAO,SAAS3L,EAAQ4L,EAAoBC,GAAK,EAAOC,GAAS,GAEzE,OAEO,IFCJ,SAAkBjN,EAAgBC,EAAqBmD,EAAwD,MACpH,IAAIlD,EAAUF,EAAQG,EAAO,GAC7B,IAAI,IAAIX,EAAM,EAAGA,EAAMS,EAAUP,OAAQF,IAGvC,GAFAW,EAAOF,EAAUT,GAEdU,EAAQC,GAAO,CAChB,MAqIoBlB,EArIPiB,EAAQC,cAqIwCtB,QAAyB,iBAARI,GAjI5E,OAAOO,EAHPU,EAAUA,EAAQC,QAMZX,EAAM,EAAGS,EAAUP,OAC3BQ,EAAUA,EAAQC,GAAQ,GAIvBuB,EAAY0B,GACZA,EAAmBlD,EAASC,GAE7BD,EAAQC,GAAQiD,EAsHC,IAACnE,EAnHxB,OAAO,EE3BEiO,CAAS/L,EAAQ4L,GAAU,CAAC5L,EAAQgM,KACzChM,EAAOgM,GAAS3K,EAAQrB,EAAOgM,GAAQH,EAAMC,OAIjDpJ,EAAUuJ,KAAO,SAASjM,EAAQ4L,GAChC,OAAOhN,EAASoB,EAAQ4L,IAI1BlJ,EAAU1E,UAAU2N,KAAO,SAASO,EAAkBL,GAAK,EAAOC,GAAS,GACzEpJ,EAAUiJ,KAAK/I,KAAKM,WAAYgJ,EAASf,MAAM,KAAMU,EAAMC,IAG7DpJ,EAAU1E,UAAUiO,KAAO,SAASC,GAClC,OAAOtN,EAASgE,KAAKM,WAAYgJ,EAASf,MAAM,OElBpDgB,CAAYzJ,GD5BL,SAAkBA,GAIvBA,EAAU+G,OAAM,SAASkB,GACvBA,EAAWlH,IAAI,eAAe,SAASmF,EAAW7E,GAChD,IAAIqI,EAAQrI,EAAQxF,OAAQJ,EAAW4F,GAAU,GAAI6E,EAGrD,OADIwD,IAAOA,EAAQ,MACZA,KAETzB,EAAWlH,IAAI,cAAc,SAASmF,EAAW7E,GAE/C,OADYA,EAAQxF,OAAQJ,EAAW4F,GAAU,GAAI6E,QAQzDlG,EAAU+G,OAAM,SAASkB,GAEvBA,EAAWlH,IAAI,WAAW,WACxBb,KAAKyJ,QAAS,KAEhB1B,EAAWlH,IAAI,SAAS,WACtBb,KAAKyJ,QAAS,QAQlB,IAAIC,EAAuD,GAC3DrN,GAAmBI,IACjB,IAAIiN,EAAa3B,WAEf,OADAnM,QAAQ+N,KAAK,8BACN,EAGT,MAAQ5B,WAAYA,GAAe2B,EAGnC,GAAG3B,EAAW6B,aAAc,OAAO,EAGhC,CAAC7B,EAAW1H,OAAQR,GAAehC,QAAQpB,EAAI7B,MAAQ,GAGvDmN,EAAW5D,MAAkB,GAAM,GAAO,MAO/CrE,EAAU+G,OAAM,SAASkB,GAEvB2B,EAAa3B,WAAaA,EAC1BA,EAAWlH,IAAI,iBAAiB,WAC9Bb,KAAK4J,cAAe,KHiDnB,SAA0BxM,EAAQG,GACvC,IAAIC,EAAU,KACd,IAAK,IAAIpB,KAAQmB,EACfC,EAAUJ,EAAOhB,GACbqB,EAAWD,KAEfJ,EAAOhB,GAAQmB,EAAWnB,IGnD1ByN,CAAiB9B,EAAWhI,QAAS,CACnC+J,gBAAgB,IAGlB/B,EAAWlH,IAAI,SAAS,SAAS6D,EAASC,GACxC,GAAG3E,KAAKD,QAAQ+J,eAAe,CAE7B,GADoBpF,IAAYC,EAE9B,OAAO,EAGT3E,KAAK+J,oBASXjK,EAAU1E,UAAU2O,WAAa,WAC/B,MAAMC,GAAc,IAAIzD,MAAOC,UAE/BjK,OAAOuG,aAAaE,QAAQnD,EAAemK,EAAY,KC1D3DC,CAASnK,GSlCF,SAAgBA,GACrBA,EAAU+G,OAAM,SAASkB,GACvBA,EAAWlH,IAAI,eAAe,SAASmF,EAAW7E,GAIhD,OAHYA,EAAQxF,OAAQJ,EAAW4F,GAAU,GAAI6E,KAKvD+B,EAAWlH,IAAI,cAAc,SAASmF,EAAW7E,GAI/C,OAHYA,EAAQxF,OAAQJ,EAAW4F,GAAU,GAAI6E,QT0B3DkE,CAAOpK,GAEP,U","sources":["webpack://Lycabinet/webpack/universalModuleDefinition","webpack://Lycabinet/webpack/bootstrap","webpack://Lycabinet/webpack/runtime/define property getters","webpack://Lycabinet/webpack/runtime/hasOwnProperty shorthand","webpack://Lycabinet/./src/utils/util.ts","webpack://Lycabinet/./src/utils/status.js","webpack://Lycabinet/./src/extends/observer.ts","webpack://Lycabinet/./src/extends/check.ts","webpack://Lycabinet/./src/index.js","webpack://Lycabinet/./src/core/store.ts","webpack://Lycabinet/./src/core/event.ts","webpack://Lycabinet/./src/core/lycabinet.ts","webpack://Lycabinet/./src/core/lazy-support.ts","webpack://Lycabinet/./src/core/mixin.ts","webpack://Lycabinet/./src/core/immbedding.ts","webpack://Lycabinet/./src/extends/alias.js","webpack://Lycabinet/./src/extends/filter.ts","webpack://Lycabinet/./src/extends/zip.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Lycabinet\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lycabinet\"] = factory();\n\telse\n\t\troot[\"Lycabinet\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * Utils.js.\r\n * By lozyue.\r\n */\r\n\r\n/**\r\n * Get the item in an array with index. Support negative index.\r\n * @param  {...any} objs \r\n */\r\nexport const arrayIndex = function (arr, index) {\r\n  index = (arr.length + index) % arr.length;\r\n  if (arr[index] === undefined) {\r\n    console.log(arr, index);\r\n    throw new Error(`The index ${index} in array ${arr.toString()} is overflowed!`);\r\n  }\r\n  return arr[index];\r\n}\r\n\r\n/**\r\n * Get the target curve path value of the source Object.\r\n * The curve path is a sequenced array\r\n * @param source \r\n * @param objPathes \r\n */\r\nexport function curveGet(source: Object, objPathes: string[]){\r\n  let interim = source, item = '';\r\n  for(let index=0; index<objPathes.length; index++){\r\n    item = objPathes[index];\r\n    interim = interim && interim[item]\r\n    if(interim === void 0 ){\r\n      return void 0;\r\n    };\r\n  }\r\n  return interim;\r\n}\r\n\r\n/**\r\n * Set the consistent even curve path of the source Object \r\n * The curve path is a sequenced array // dot split strings.\r\n * @param source \r\n * @param objPathes \r\n * @param {unknown|Function} value The value assign for the curve object target. Support callback that if target value is a function you should set it in call back.\r\n * @returns { number|true } The number indicator the failed position of the conflict path.\r\n */\r\nexport function curveSet(source: Object, objPathes: string[], value: ((target: Object, name: string)=>any)| unknown = null){\r\n  let interim = source, item = '';\r\n  for(let index=0; index<objPathes.length; index++){\r\n    item = objPathes[index];\r\n    // existed.\r\n    if(interim[item] ){\r\n      if(is_Object(interim[item])){\r\n        interim = interim[item];\r\n      // Unexpected non-object value.\r\n      } else {\r\n        return index;\r\n      }\r\n    // non existed and not the last\r\n    } else if(index+1< objPathes.length){\r\n      interim = interim[item] = {};\r\n    // the last\r\n    } else {\r\n      // assign the value.\r\n      if(is_Function(value))\r\n        (value as Function)(interim, item);\r\n      else\r\n        interim[item] = value;\r\n    }\r\n  };\r\n  return true;\r\n}\r\n\r\n/**\r\n * Centralized management.\r\n * Add a listener to window storage event.\r\n * @param { Function } invoke Target invoke function or handle. \r\n * @param { Boolean } remove wheather the action is to remove added storage listener.\r\n */\r\nexport const addStoreListener = (()=>{\r\n  const invokeQueue: Function[]= [];\r\n  window.addEventListener(\"storage\", (eve)=>{\r\n    invokeQueue.forEach(func=>{\r\n      func(eve);\r\n    });\r\n  }, false); // default bubble.\r\n\r\n  return (invoke, remove = false)=>{\r\n    if(remove) \r\n      removeArrayItem(invokeQueue, invoke);\r\n    else invokeQueue.push(invoke);\r\n  }\r\n})();\r\n\r\n/**\r\n * Deep Object.assign source to target.\r\n * @param target\r\n * @param source\r\n */\r\nexport const deepAssign = function (...objs) {\r\n  let merged;\r\n  objs.reduce((target, source) => {\r\n    for (let item in source) {\r\n      if (!(target[item] && is_PlainObject(target[item])) ) {\r\n        target[item] = source[item];\r\n      } else {\r\n        deepAssign(target[item], source[item]);\r\n      }\r\n    }\r\n    merged = target;\r\n    return target;\r\n  }, objs[0]); // The third param is to set default value.\r\n  return merged;\r\n}\r\n\r\n/**\r\n * Just assign the item in supplement which not defined in target.\r\n * If you don't want to override the value of origin Object, supplement is the high performance choice.\r\n * Not deep mode.\r\n * @param {*} target \r\n * @param {*} supplement \r\n */\r\nexport function objectSupplement(target, supplement) {\r\n  let current = null;\r\n  for (let item in supplement) {\r\n    current = target[item];\r\n    if (is_Defined(current))\r\n      continue;\r\n    target[item] = supplement[item];\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * Just assign the item in supplement which not defined in target.\r\n * If you don't want to override the value of origin Object, supplement is the high performance choice.\r\n * Deep mode by iterate each inner Object.\r\n * @param {*} target \r\n * @param {*} supplement \r\n */\r\nexport function deepSupplement<R extends Object, T extends Object> (target: R|null, supplement: T) {\r\n  if(!target) return supplement;\r\n  let current: unknown = null;\r\n  for (let item in supplement) {\r\n    current = (target as unknown as T)[item];\r\n    if (is_Defined(current)) {\r\n      if (!is_PlainObject(current as Object)) continue;\r\n      deepSupplement(current as Object, supplement[item]); // The `current` is a reference which could be assigned.\r\n    }\r\n    else\r\n      // current = supplement[item];\r\n      (target as unknown as T)[item] = supplement[item];\r\n  }\r\n  return target as (R & T);\r\n}\r\n\r\n\r\n/**\r\n * Simple deepClone with optional Function clone\r\n */\r\nexport function deepClone(val, substituteObj = Object.create(null), cloneFunc = true) {\r\n  if (is_PlainObject(val)) {\r\n    var res = substituteObj;\r\n    for (var key in val) {\r\n      res[key] = deepClone(val[key]);\r\n    }\r\n    return res;\r\n  } else if (is_Array(val)) {\r\n    return val.slice()\r\n  } else if (cloneFunc && is_Function(val)) {\r\n    return Object.create(val.prototype).constructor;\r\n  } else {\r\n    return val;\r\n  }\r\n}\r\n\r\nexport function iterateObject(source: Object, iterate: Function){\r\n  iterate(source);\r\n  for(let item in source){\r\n    if( is_PlainObject(source[item]) )\r\n      iterate(source, iterate);\r\n  }\r\n}\r\n\r\nexport const is_Defined = (v: unknown):Boolean => (v !== undefined && v !== null);\r\nexport const is_Object = (obj: unknown):Boolean => (obj instanceof Object || typeof obj === \"object\");\r\nexport const is_PlainObject = (obj: unknown):Boolean => (Object.prototype.toString.call(obj) === '[object Object]');\r\nexport const is_Array = (obj: unknown):Boolean => (Array.isArray && Array.isArray(obj) || obj instanceof Array || (typeof obj === 'object') && Object.prototype.toString.call(obj).slice(-6,-1)=== 'Array' );\r\nexport const is_String = (str: Object):Boolean => ((typeof str === 'string') && str.constructor == String);\r\nexport const is_Function = (obj: unknown):Boolean => (obj instanceof Function);\r\n\r\nexport const is_Empty = (val: unknown)=>{\r\n  if(!val) return true;\r\n  if(is_Array(val)){\r\n    return !(val as Array<unknown>).length;\r\n  }else{\r\n    return !Object.keys((val) as Object).length;\r\n  }\r\n}\r\n\r\n/*\r\n * Delete the Item in an Array, returning the new Array.\r\n */\r\nexport var removeArrayItem = (arr, item) => {\r\n  if (arr.length) {\r\n    let index = arr.indexOf(item);\r\n    if (index > -1) {\r\n      return arr.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Provide with a processor accept a list of stuff or single stuff\r\n * Give it the action to its inner iterator.\r\n * The original Stuff can not be an Array!\r\n */\r\nexport function arbitraryFree(input, func) {\r\n  if (input.forEach) {\r\n    return input.forEach(func);\r\n  } else {\r\n    return func(input, 0);\r\n  }\r\n}\r\n\r\nexport function storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = '__storage_test__';\r\n    storage.setItem(x, x);\r\n    storage.removeArrayItem(x);\r\n    return true;\r\n  }\r\n  catch (e) {\r\n    return e instanceof DOMException && (\r\n      // everything except Firefox\r\n      e.code === 22 ||\r\n      // Firefox\r\n      e.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      e.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\nexport const DEBUG = process.env.NODE_ENV !== 'production';\r\n\r\nexport const EnvAssociate = {\r\n  Light: false, // light mode.\r\n};\r\n","/**\r\n * Status for Mutex\r\n */\r\n\r\nconst CREATED = 'created';\r\nconst MOUNTED = 'mounted';\r\nconst IDLE = 'idle';\r\nconst LOADING = 'loading';\r\nconst SAVING = 'saving';\r\nconst CLEARING = 'clearing';\r\n\r\n\r\nexport {\r\n  CREATED,\r\n  IDLE,\r\n  LOADING,\r\n  SAVING,\r\n  CLEARING,\r\n  MOUNTED,\r\n};\r\n","/**\r\n * Adding an mini observer for storage variable listening.\r\n * Using Object define\r\n */\r\n\r\nimport { curveGet, curveSet, DEBUG, deepSupplement, is_Defined, is_PlainObject, iterateObject, removeArrayItem } from \"../utils/util\";\r\n\r\n// change methods.\r\nlet onSetted: Function| null = null;\r\n\r\n/**\r\n * Targets\r\n * @param Lycabinet \r\n */\r\n\r\nexport function addObserver(Lycabinet){\r\n  Lycabinet.prototype.initObserver = function(options: any = {}){\r\n    // configurate options\r\n    deepSupplement(options, {\r\n      lazy: true,\r\n      initWatch: true, // whether transform the origin property in Observer.\r\n      deepWatch: true, // whether consistently watch the Object type value setted in initial data.\r\n      shallowWatch: false, // whether just watch the surface of the Object.\r\n    });\r\n\r\n    // init proxy Interceptor.\r\n    const _this = this;\r\n    onSetted = ()=>{\r\n      _this._trigger(\"setItem\");\r\n      options.lazy? _this.lazySave(): _this.save();\r\n    };\r\n    \r\n    if(!options.initWatch) return false;\r\n    \r\n    this.__storage = deepConvert(this.__storage, options.deepWatch, options.shallowWatch);\r\n    this.setStore(this.__storage);\r\n  };\r\n\r\n  // Add a static methods\r\n  Lycabinet.$set = function(target, pathList: string[], deep=false, shallow =true){\r\n    // CurveSet the target value.\r\n    return curveSet(target, pathList, (target, kname)=>{\r\n      target[kname] = convert(target[kname], deep, shallow);\r\n    }) === true;\r\n  };\r\n\r\n  Lycabinet.$get = function(target, pathList: string[]){\r\n    return curveGet(target, pathList);\r\n  }\r\n\r\n  // Makes the target to be reactive\r\n  Lycabinet.prototype.$set = function(pathName: string, deep=false, shallow =true){\r\n    Lycabinet.$set(this.getStore(), pathName.split('.'), deep, shallow);\r\n  }\r\n  // Makes the target to be reactive\r\n  Lycabinet.prototype.$get = function(pathName: string){\r\n    return curveGet(this.getStore(), pathName.split('.') );\r\n  }\r\n};\r\n\r\n/**\r\n * Proxy Modules.\r\n */\r\ntype proxyValue = Record<string, {value: any, trigger: Function[]} > & {_parent: null| proxyValue};\r\n\r\nfunction deepConvert(source: Object, deepWatch=true, shallowWatch=false){\r\n  const plainObjQueue: Array<any> = [];\r\n  // reverse for convert\r\n  const iterate = (current)=>{\r\n    plainObjQueue.unshift(current);\r\n    for(let item in current){\r\n      if(is_PlainObject(current[item])){\r\n        iterate(current[item]);\r\n      }\r\n    }\r\n  };\r\n  iterate(source);\r\n  plainObjQueue.forEach((item, index, arr)=>{\r\n    for(let ref in item){\r\n      // convert by reference.\r\n      if(is_PlainObject(item[ref]) )\r\n        arr[index][ref] = convert(item[ref], deepWatch, shallowWatch);\r\n    }\r\n  });\r\n  source = convert(source, deepWatch, shallowWatch);\r\n  return source;\r\n}\r\n\r\n/**\r\n * Convert the normal data to be reactive.\r\n *  todo: add the Array type support.\r\n * @param source \r\n * @param deepWatch \r\n * @param shallowWatch \r\n */\r\nfunction convert(source: Object, deepWatch = false, shallowWatch = true){\r\n  let internalValue: proxyValue = Object.create(null);\r\n  // to do... Add trigger bubbule to its parents.\r\n  internalValue[\"_parent\"] = null;\r\n\r\n  const $addListener = (trigger: Function, onProp: string)=>{\r\n    if(internalValue[onProp] === undefined){\r\n      if(DEBUG) throw new Error(`[Lycabinet]: The prop ${onProp} is not found on source Object!`);\r\n      return false;\r\n    }\r\n    return internalValue[onProp].trigger.push(trigger);\r\n  };\r\n  const $removeListener = (handle: Function, onProp: string)=>{\r\n    if(internalValue[onProp] === undefined){\r\n      if(DEBUG) throw new Error(`[Lycabinet]: The prop ${onProp} is not found on source Object!`);\r\n      return false;\r\n    }\r\n    return removeArrayItem(internalValue[onProp].trigger, handle);\r\n  };\r\n  const propConfig = {\r\n    enumerable: false, // which is not enumerable in source either.\r\n    configurable: true,\r\n    writable: false,\r\n  };\r\n  // save the values\r\n  for(let rawItem in source){\r\n    internalValue[rawItem] = {\r\n      value: source[rawItem],\r\n      trigger: [],\r\n    };\r\n  };\r\n  // origin definition\r\n  [\"$addListener\", \"$removeListener\"].forEach((hook, index)=>{\r\n    internalValue[hook] = {value: null} as {value: unknown, trigger: Function[]};\r\n    Object.defineProperty(internalValue[hook], \"value\", {\r\n      value: !index? $addListener: $removeListener,\r\n      ...propConfig\r\n    });\r\n  });\r\n\r\n  const HandleRules = {\r\n    get(target, prop, receiver) {\r\n      DEBUG && console.info(\"Getted\", target, prop, receiver, internalValue);\r\n      // if(['$removeListener', \"$addListener\"].indexOf(prop) > -1)\r\n      return internalValue[prop]===undefined? undefined: internalValue[prop].value;\r\n    },\r\n    set(target, prop, newValue, receiver) {\r\n      DEBUG && console.info(\"Setted\", target, prop, receiver, internalValue);\r\n      // init\r\n      internalValue[prop] = internalValue[prop] || {\r\n        value: newValue,\r\n        trigger: [],\r\n      };\r\n      let rawValue = internalValue[prop].value;\r\n      // consistent deepWatch observer. \r\n      if(deepWatch){\r\n        if(is_PlainObject(newValue)){\r\n          if(shallowWatch){\r\n            internalValue[prop].value = convert(newValue, false, true);\r\n          }else{\r\n            internalValue[prop].value = deepConvert(newValue, deepWatch, false);\r\n          }\r\n        }\r\n      }else\r\n        internalValue[prop].value = newValue;\r\n\r\n      if(rawValue !== newValue){\r\n        let triggers = internalValue[prop].trigger;\r\n        for(let index=0; index< triggers.length; index++){\r\n          triggers[index](rawValue, newValue);\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  };\r\n  return new Proxy(source, HandleRules);\r\n}\r\n","/**\r\n * Argument the robustness of the JSON data process.\r\n * And preserve the atomicity when there is multi-tabs opened by user.\r\n * Like delete the Item in Storage if it is vacant.\r\n */\r\n\r\nimport { addStoreListener, arrayIndex, DEBUG, objectSupplement } from \"../utils/util\";\r\n\r\nconst ParticalToken = 'cabinetSyncTabs';\r\n\r\nexport function addCheck(Lycabinet){\r\n  /**\r\n   * JSON analysis argumented.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    cabinetIns._on(\"localLoaded\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // add pre-check for JSON Parse.\r\n      if(!final) final = '{}';\r\n      return final;\r\n    });\r\n    cabinetIns._on(\"localSaved\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      return final;\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Add a dirty flag for judging.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    // This is not so precious. Because user can manually set the __storage Object whose action is not recorded.\r\n    cabinetIns._on(\"setItem\", function(){\r\n      this._dirty = true;\r\n    });\r\n    cabinetIns._on(\"saved\", function(){\r\n      this._dirty = false;\r\n    })\r\n  });\r\n\r\n  /**\r\n   * Listening the storage event from other tabs(pages)\r\n   * by\r\n   */\r\n  var localContext: {cabinetIns?: Record<string, unknown>} = {};\r\n  addStoreListener( (eve)=>{\r\n    if(!localContext.cabinetIns){\r\n      console.warn(\"cabinetIns is not mouted!\");\r\n      return true;\r\n    }\r\n\r\n    const { cabinetIns: cabinetIns } = localContext;\r\n    \r\n    // Do not reload if current cabinet has shared cabinet.\r\n    if(cabinetIns.useLoadCache) return true;\r\n\r\n    // Reload. By default using deeepMerge mode.\r\n    if([cabinetIns.__root, ParticalToken].indexOf(eve.key) > -1){\r\n      DEBUG && console.log(\"[Lycabinet]: Synchronizing data from other tabs...\");\r\n      // merge data using default options.\r\n      (cabinetIns.load as Function)(true, false, true); // Considering of the latency on cloud, we only synchronize the data on local.\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Add auto tab synchronize listener options.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    // save the localContext\r\n    localContext.cabinetIns = cabinetIns;\r\n    cabinetIns._on(\"loadFromCache\", function(){\r\n      this.useLoadCache = true; \r\n    });\r\n\r\n    // add options for custom database which is not localStorage.\r\n    objectSupplement(cabinetIns.options, {\r\n      autoNotifyTabs: false,\r\n    });\r\n\r\n    cabinetIns._on(\"saved\", function(onCloud, concurrent){\r\n      if(this.options.autoNotifyTabs){\r\n        const IgnoreLocal = onCloud && !concurrent;\r\n        if(IgnoreLocal){\r\n          return false;\r\n        }\r\n\r\n        this.notifyTabs();\r\n      }\r\n    });\r\n  });\r\n\r\n  /**\r\n   * If the database in configuration is not `LocalStorage` (like Env is `sessionStorage`)\r\n   * You should call this method to notify the other pages or set autoNotifyTabs to true.\r\n   */\r\n  Lycabinet.prototype.notifyTabs = function(){\r\n    const randomToken = new Date().getTime();\r\n    // this will give other pages a notifycation.\r\n    window.localStorage.setItem(ParticalToken, randomToken+'');\r\n  }\r\n}\r\n","/**\r\n * Lycabinet.js\r\n * Full build.\r\n */\r\n\r\nimport { InitStore } from './core/store';\r\nimport { InitEventSystem } from './core/event';\r\nimport { InitCore } from './core/lycabinet';\r\nimport { InitLazyDepartment } from './core/lazy-support';\r\nimport { InitMixin } from \"./core/mixin\";\r\n\r\nimport { initImbedding } from './core/immbedding';\r\nimport { initAlias } from './extends/alias';\r\nimport { addFilter } from './extends/filter';\r\nimport { addObserver } from './extends/observer';\r\n\r\nimport { addCheck } from './extends/check';\r\nimport { addZip } from './extends/zip';\r\n\r\n\r\nfunction Lycabinet(...options){\r\n  if (process.env.NODE_ENV !== 'production' && !(this instanceof Lycabinet) ) {\r\n    (global.warn || console.warn)('Lycabinet is a constructor and should be called with the `new` keyword');\r\n    return null;\r\n  }\r\n  this._init.apply(this, options);\r\n}\r\n\r\nInitStore(Lycabinet);\r\nInitEventSystem(Lycabinet);\r\nInitCore(Lycabinet);\r\nInitLazyDepartment(Lycabinet);\r\nInitMixin(Lycabinet);\r\n\r\ninitImbedding(Lycabinet);\r\ninitAlias(Lycabinet);\r\n\r\naddFilter(Lycabinet);\r\naddObserver(Lycabinet);\r\n\r\naddCheck(Lycabinet);\r\naddZip(Lycabinet);\r\n\r\nexport default Lycabinet;\r\n","/**\r\n * Given a private variable for every set storage.\r\n * Basement.\r\n */\r\n\r\nimport { DEBUG, is_Defined, is_PlainObject } from \"../utils/util\";\r\n\r\nexport function InitStore(Lycabinet){\r\n  const __cabinet = Object.create(null);\r\n\r\n  Lycabinet.prototype.hasStore = function(){\r\n    return is_Defined(__cabinet[this.__root]) && is_PlainObject(__cabinet[this.__root]);\r\n  }\r\n\r\n  /**\r\n   * Get the cabinet access.\r\n   * @returns {Plain Object} __cabinet ; The reference of the storage Object property.\r\n   * Each instance is shared by the root key.\r\n   */\r\n  Lycabinet.prototype.getStore = function(){\r\n    return __cabinet[this.__root];\r\n  }\r\n  \r\n  /**\r\n   * To initialize the __cabinet storage. \r\n   * @param {Plain Object} cabinet \r\n   */\r\n  Lycabinet.prototype.setStore = function(cabinet){\r\n    __cabinet[this.__root] = cabinet;\r\n  }\r\n\r\n  /**\r\n   * To clear the inner cache of cabinet.\r\n   */\r\n  Lycabinet.prototype.removeStore = function(){\r\n    __cabinet[this.__root] = void 0;\r\n  }\r\n\r\n  Lycabinet.$removeStore = function(root: string){\r\n    __cabinet[root] = void 0;\r\n  }\r\n\r\n  DEBUG && (Lycabinet.$getStroe = function(root: string){\r\n    return __cabinet[root];\r\n  });\r\n}\r\n","/**\r\n * Event system provided.\r\n * Have weak hook fundamental at same time.\r\n */\r\nimport { removeArrayItem, is_Function, DEBUG, arrayIndex, EnvAssociate } from '../utils/util';\r\n\r\nexport function InitEventSystem(Lycabinet){\r\n  const subscriptions = Object.create(null);\r\n\r\n  Lycabinet.prototype._on = function(name, func){\r\n    if(!is_Function(func)){\r\n      throw new Error(\"[Laction]:The second parameter of _on method must be a callback function!\");\r\n    }\r\n    const actions = subscriptions[name] || (subscriptions[name] = []);\r\n    actions.push(func);\r\n  };\r\n  \r\n  Lycabinet.prototype._off = function(name, handle){\r\n    const actions = subscriptions[name] || (subscriptions[name] = []);\r\n    removeArrayItem(actions, handle);\r\n  };\r\n\r\n  Lycabinet.prototype._trigger = function(name, ...params){\r\n    const actions = subscriptions[name] || (subscriptions[name] = []);\r\n    // const results = actions.map(func=>{\r\n    //   return func.apply(this, params);\r\n    // });\r\n    const results: Array<unknown>= [];\r\n    params.push(results);\r\n    for(let index=0; index< actions.length; index++){\r\n      let temp = actions[index].apply(this, params);\r\n      temp && results.push( temp );\r\n    }\r\n    // if no hook this will returns last params. We can use last params to set default value.\r\n    return results.length? arrayIndex(results, -1): params.length? arrayIndex(params, -1): null;\r\n    // return this._finalHandle(results);\r\n  };\r\n\r\n  Lycabinet.prototype._once = function(name, func){\r\n    const _this = this;\r\n    var handleFunc = function(...params){\r\n      func.apply(_this, params);\r\n      _this._off(name, handleFunc);\r\n    }; \r\n    this._on(name, handleFunc);\r\n  };\r\n\r\n  // for Debug\r\n  // DEBUG && \r\n  !EnvAssociate.Light && (Lycabinet.prototype._setlog = function(){\r\n    const presets = [\r\n      'created','mounted', \r\n      'beforeLoad', 'beforeLocalLoad', 'localLoaded', 'loaded', \r\n      'loadFromCache',\r\n      'setItem', 'writeLock', 'writeBackflow', \r\n      'getItem', 'removeItem', \r\n      'lazySave', \r\n      'beforeSave', 'beforeLocalSave', 'localSaved', 'saved', 'busy',\r\n      'beforeClear', 'beforeLocalClear', 'localCleared', 'cleared',\r\n      'error',\r\n    ];\r\n\r\n    new Set(Object.keys(subscriptions).concat(presets) ).forEach(item=>{\r\n      let testHandle = subscriptions[item] && subscriptions[item]._logHandle;\r\n      if(testHandle){\r\n        this._off(item, testHandle)\r\n      }\r\n      // give a handle\r\n      const logHandle = ()=>{\r\n        console.log(`[Lycabinet]: Triggered the event: '${item}'`);\r\n      };\r\n      this._on(item, logHandle);\r\n      // add handle\r\n      subscriptions[item]._logHandle = logHandle;\r\n    });\r\n  });\r\n}\r\n","/**\r\n * lycabinet.js\r\n * A high performance JSON Object storage helper.\r\n * 高性能的 JSON对象 小型数据存储辅助类\r\n * @createdTime 2021-03-28\r\n */\r\n\r\nimport * as _STATUS from '../utils/status.js';\r\nimport { deepAssign, arbitraryFree, is_Defined, is_PlainObject, DEBUG, is_Empty, arrayIndex, is_String } from '../utils/util';\r\n\r\n/**\r\n * Init core.\r\n * @param {*} root \r\n * @param {Object} options => {\r\n *   initStorage => Object, // 初始化值\r\n *   outerSave => Function, // 自定义保存方法，接收一个参数，为存储的数据对象\r\n *   outerLoad => Function, // 自定义装载方法，返回一个对象，将Assign给数据存储对象\r\n * }\r\n * 注意：以上网络请求的外部通信方法需要返回一个Promise对象.\r\n */\r\nexport function InitCore(Lycabinet){\r\n  \r\n  /**\r\n   * The configuration initialization.\r\n   * @param { String } root \r\n   * @param { Object } options \r\n   */\r\n  Lycabinet.prototype._init = function(root: string, options: Record<string, unknown> = {} ){\r\n\r\n    if(options.initStorage && !is_PlainObject(options.initStorage) ){\r\n      throw new Error(\"[Lycabinet]:The type of the provided option `initStorage` must be an Object!\");\r\n    }\r\n    if( !is_String(root)) \r\n      throw new Error(`[Lycabinet]: The param \"root\" should be an string, than type ${typeof root}!`);\r\n    this.__root = (root || 'lycabinet') + ''; // The key in storage. Must be a string.\r\n\r\n    // default options.\r\n    const defaultOptions = {\r\n      root: this.__root, // copy to options.\r\n      autoload: true, // 实例化后 自动调用 __init 方法实例化. (并且此时init中会自动调用 load 方法. 默认使用 Object.assign 浅合并，可手动调用传参深度合并.)\r\n      lazyPeriod : ~~(options.lazyPeriod as number) || 5000, // set the lazy period of lazySave methods.\r\n      saveMutex: true, // 存储互斥 仅在 idle 状态可进行保存操作. （暂时未防止loading完成前修改……）\r\n      autoLazy: true, // Call lazy save automaticly when the save is busy. \r\n      logEvent: false, // use this to log event globally from scratch\r\n      useSharedCabinet: true, // use global shared cabinet\r\n      shareCabinet: true, // share the cabinet for global\r\n      // local interfaces of storage\r\n      localInterface: {\r\n        database: window.localStorage,\r\n        getItem: \"getItem\", // method name, String\r\n        setItem: \"setItem\", // method name, String\r\n        removeItem: \"removeItem\", // method name, String\r\n      }, \r\n      \r\n      // Decide weather enable local cabinet when cloud is setted. Auto judge.\r\n      concurrence: !(options.outerLoad && options.outerSave && options.outerClear),\r\n      // cloud loads example options. The inner pointer `this` is pointed to `cabinet.options` if not set by arrow function.\r\n      outerLoad: ([root, cabinet], success, error)=>{\r\n        // data = load(root)\r\n        let data = {};\r\n        success(data);\r\n      },\r\n      outerSave: ([root, cabinet], success, error)=>{\r\n        // save(root, cabinet)\r\n        success();\r\n      },\r\n      outerClear: ([root, cabinet], success, error)=>{\r\n        // clear(root)\r\n        success();\r\n      },\r\n    };\r\n    this.options = deepAssign(defaultOptions, options);\r\n    this.__install(this.options);\r\n    \r\n    // root event console log\r\n    if(this.options.logEvent) this._setlog();\r\n\r\n    this.status = _STATUS.CREATED; // status token\r\n    this._trigger(\"created\");\r\n    // From now can have CURD manipulations.\r\n    if(this.options.autoload) this.__init(options.initStorage || Object.create(null) );\r\n  };\r\n\r\n  /**\r\n   * Initialize the cabinet storage before 'CURD' manipulation.\r\n   * If autoload is not setted, you should call this manually.\r\n   * Todo: add reduplicate __init check and warning.\r\n   */\r\n  Lycabinet.prototype.__init = function(cabinet = Object.create(null)){\r\n    // write protection backflow\r\n    const writeBackflow = function(){\r\n      if(is_Empty(this.__tempStorage)) return;\r\n      // backflow\r\n      deepAssign(this.__storage, this.__tempStorage);\r\n      this.__tempStorage = Object.create(null);\r\n      this._trigger(\"writeBackflow\");\r\n    }\r\n    this._on(\"loaded\", writeBackflow);\r\n    this._on(\"cleared\", writeBackflow);\r\n\r\n    // override the options by the already existed cabinet.\r\n    // this is global shared with all the instance in the page.\r\n    if(this.options.useSharedCabinet && this.hasStore()){\r\n      // this.__storage = cabinet = this.getStore(); // That's useless cause cabinet is just a Object reference.\r\n      this.__storage = this.getStore();\r\n      // Sync status.\r\n      Object.assign(cabinet, this.__storage);\r\n      this._trigger(\"loadFromCache\");\r\n    }\r\n    else{\r\n      this.__storage = this.__storage || cabinet;\r\n      if(this.options.shareCabinet)\r\n        this.setStore(this.__storage);\r\n      // Auto load. Only when the cabinet in using is private.\r\n      if(this.options.autoload) this.load(false); // default using shallow assign.\r\n      else this.status = _STATUS.IDLE; // Amend the status error.\r\n    }\r\n\r\n    this.status = _STATUS.MOUNTED;\r\n    this._trigger(\"mounted\");\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Test the cabinet is busy or not.\r\n   */\r\n  Lycabinet.prototype.isVacant = function(){\r\n    return this.status===_STATUS.IDLE;\r\n  }\r\n\r\n  /**\r\n   * Set an item with key.\r\n   * Added write protection on stage loading and clearing.\r\n   * @param {*} key \r\n   * @param {*} value \r\n   */\r\n  Lycabinet.prototype.set = function(key, value){\r\n    const MutexStatus = [_STATUS.LOADING, _STATUS.CLEARING];\r\n    // add write protection.    \r\n    if(MutexStatus.indexOf(this.status) > -1){\r\n      this._trigger(\"writeLock\");\r\n      this.__tempStorage = this.__tempStorage || (this.__tempStorage = Object.create(null));\r\n      this.__tempStorage[key] = value;\r\n      return this;\r\n    }\r\n\r\n    this.__storage[key] = value;\r\n    this._trigger('setItem', key, value);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Get the value of an item by key.\r\n   * Please don't read from loading and clearing stream.\r\n   * @param {*} key \r\n   */\r\n  Lycabinet.prototype.get = function(key){\r\n    let backValue = this.__storage[key];\r\n    this._trigger('getItem', key, backValue);\r\n    return backValue;\r\n  }\r\n\r\n  /**\r\n   * Delete an item by key.\r\n   */ \r\n  Lycabinet.prototype.remove = function(keys){\r\n    let removed = false;\r\n    arbitraryFree(keys, (k)=>{\r\n      // Though it isn't disappeared immediately, But after JSON parse and stringify manipulations this will be cleared.\r\n      if(this.__storage.hasOwnProperty(k)){\r\n        this.set(k, void 0);\r\n        removed = true\r\n      }\r\n    }); \r\n    this._trigger('removeItem', keys, removed);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Delete the cabinet directly.\r\n   * But the data may still exist in memory(RAM).  \r\n   * @param {Boolean} onCloud \r\n   * @param {Boolean} concurrent Override the default options in `this.options.concurrence`\r\n   */\r\n  Lycabinet.prototype.clear = function(onCloud: boolean|null = null, concurrent: boolean|null = null){\r\n    // merge default options.\r\n    concurrent = is_Defined(concurrent)? concurrent: this.options.concurrence;\r\n    onCloud = is_Defined(onCloud)? onCloud: !!this.options.outerClear;\r\n    this.status = _STATUS.LOADING;\r\n    this._trigger('beforeClear');\r\n    \r\n    // Local clear\r\n    let localClear = ()=>{\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalClear', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"[Lycabinet]: The local clear action is ignored by options: concurrence=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      localApi.database[localApi.removeItem]( this.__root );\r\n      // trigger hook event after call local database to clear the Item.\r\n      this._trigger('localCleared', this.__root); // Give the param of the remove target. \r\n    }\r\n\r\n    // Cloud clear\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = ()=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('cleared', onCloud, concurrent);\r\n    }\r\n    const onError = (msg, reason='')=>{\r\n      this._trigger(\"error\", \"clear\", \"cloudClearings\", reason);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('cleared', onCloud, concurrent);\r\n      console.error(`[Lycabinet]: Failed to Clear the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localClear();\r\n      if(onCloud) \r\n        this.options.outerClear(pack, onSuccess, onError);\r\n      else {\r\n        this.status = _STATUS.IDLE;\r\n        this._trigger('cleared', onCloud, concurrent);\r\n      }\r\n    } catch(e){\r\n      onError(e, \"unknown\");\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Load the cabinet on initialization.\r\n   * The local load is faster than cloud.\r\n   * @param { Boolean } onCloud \r\n   * @param { Boolean } concurrent Override the default options in `this.options.concurrence`\r\n   * @param { Boolean } deepMerge Using deepAssign instead of Object.assign to merge the data from local and cloud.\r\n   */\r\n  Lycabinet.prototype.load = function(deepMerge = false, onCloud: boolean|null = null, concurrent: boolean|null = null){\r\n    // merge default options.\r\n    concurrent = is_Defined(concurrent)? concurrent: this.options.concurrence;\r\n    onCloud = is_Defined(onCloud)? onCloud: !!this.options.outerLoad;\r\n    this.status = _STATUS.LOADING;\r\n    this._trigger(\"beforeLoad\");\r\n\r\n    // Local load \r\n    let localLoad = ()=>{\r\n      let localTemp = null;\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalLoad', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"[Lycabinet]: The local load action is ignored by options: concurrence=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      \r\n      let initialData = localApi.database[localApi.getItem]( this.__root );\r\n      // trigger hook event after call local database to parse the value. Should have a return value in event. (data)=>{ return handle(data); }\r\n      initialData = this._trigger('localLoaded', initialData); // Only take effect on the last element.\r\n\r\n      localTemp = JSON.parse( initialData );\r\n      if(deepMerge)\r\n        deepAssign(this.__storage, localTemp);\r\n      else\r\n        Object.assign(this.__storage, localTemp);\r\n    };\r\n\r\n    // Cloud load\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = (data)=>{\r\n      if(!is_Defined(data) || !is_PlainObject(data))\r\n        throw new Error(`[Lycabinet]: Load cabinet with empty 'data' which type is ${typeof data}`);\r\n        \r\n      if(deepMerge)\r\n        deepAssign(this.__storage, data);\r\n      else \r\n      // shallow assign makes cloud weight heavier.\r\n        Object.assign(this.__storage, data);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('loaded', onCloud, concurrent);\r\n    }\r\n    const onError = (msg, reason='')=>{\r\n      this._trigger(\"error\", \"load\", \"cloudLoadings\", reason);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('loaded', onCloud, concurrent);\r\n      console.error(`[Lycabinet]: Failed to Load the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localLoad();\r\n      if(onCloud) \r\n        this.options.outerLoad(pack, onSuccess, onError);\r\n      else {\r\n        this.status = _STATUS.IDLE;\r\n        this._trigger('loaded', onCloud, concurrent);\r\n      }\r\n    } catch(e){\r\n      onError(e, \"unknown\");\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Save the cabinet to database or cloud.\r\n   * @param {*} onCloud \r\n   * @param {Boolean} concurrent Override the default options in `this.options.concurrence`\r\n   */\r\n  Lycabinet.prototype.save = function(onCloud: boolean|null = null, concurrent: boolean|null = null){\r\n    // check the status for mutex protection\r\n    let check = this.options.saveMutex && !this.isVacant();\r\n    this._trigger(\"beforeSave\", check);\r\n    if( check ){\r\n      DEBUG && console.log(`[Lycabinet]: The 'save' manipulation is deserted for busy. Current Status: ${this.status} \\nSet 'saveMutex' false to disable it.`);\r\n      this._trigger(\"busy\");\r\n      this.options.autoLazy && this.lazySave(onCloud, concurrent);\r\n      return this;\r\n    }\r\n    \r\n    // merge default options.\r\n    onCloud = is_Defined(onCloud)? onCloud: !!this.options.outerSave;\r\n    concurrent = is_Defined(concurrent)? concurrent: this.options.concurrence;\r\n    this.status = _STATUS.SAVING;\r\n\r\n    // Local save \r\n    let localSave = ()=>{\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalSave', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"[Lycabinet]: The local save action is ignored by options: concurrence=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      // trigger hook event beforeLocalSave. Should have a return value in event. (data)=>{ return handle(data); }\r\n      let finalData = JSON.stringify(this.__storage );\r\n      // trigger hook event after call local database to save the value. Should return a String value in event.\r\n      finalData = this._trigger('localSaved', finalData); // Only take effect on the last element.\r\n\r\n      localApi.database[localApi.setItem](this.__root, finalData);\r\n    };\r\n    \r\n\r\n    // Cloud save\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = ()=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('saved', onCloud, concurrent);\r\n    }\r\n    const onError = (msg, reason=\"cloudSavings\")=>{\r\n      this._trigger(\"error\", \"save\", reason);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('saved', onCloud, concurrent);\r\n      console.error(`[Lycabinet]: Failed to Save the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localSave();\r\n      if(onCloud) \r\n        this.options.outerSave(pack, onSuccess, onError);\r\n      else {\r\n        this.status = _STATUS.IDLE;\r\n        this._trigger('saved', onCloud, concurrent);\r\n      }\r\n    } catch(e){\r\n      onError(e, 'unknown')\r\n    }\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * Map methods support.\r\n   * Iterate the first hierarchy with callback.\r\n   * @param {Function: (item, index)=>any }} callback with two params\r\n   */\r\n  Lycabinet.prototype.forEach = function(callback){\r\n    let item, index = 0;\r\n    for(let key in this.__storage){\r\n      item = this.__storage[key];\r\n      callback(item, index++); // only two params.\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Foreach methods support.\r\n   * Iterate the first hierarchy with callback.\r\n   * @param {Function: (item, index)=>any }} callback  with two params\r\n   */\r\n  Lycabinet.prototype.map = function(callback){\r\n    let item, index = 0;\r\n    for(let key in this.__storage){\r\n      item = this.__storage[key];\r\n      this.__storage[key] = callback(item, index++); // only two params.\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Lazy methods support.\r\n * @param {*} Lycabinet \r\n */\r\nexport function InitLazyDepartment(Lycabinet){\r\n  \r\n  /**\r\n   * Add lazySave support.\r\n   * The params is the same to save methods.\r\n   */\r\n  Lycabinet.prototype.lazySave = (function(){\r\n    var lastTime = 0;\r\n    return function(...params){\r\n      var nowTime = new Date().getTime();\r\n      // The gap is not so accurate but enough.\r\n      let judge = nowTime - lastTime > 5000; //this.options.lazyPeriod;\r\n      this._trigger(\"lazySave\", judge);\r\n      if (judge) {\r\n        lastTime = nowTime; // first!\r\n        // Use default settings\r\n        console.log(\"Lazy executed!\", nowTime, lastTime, judge)\r\n        this.save(...params);\r\n      }\r\n      return this;\r\n    }\r\n  })();\r\n\r\n  /**\r\n   * Just calling lazySave after save called.\r\n   * @param {*} key \r\n   * @param {*} value \r\n   * @param {...any} params parameters to lazySave (). \r\n   */\r\n  Lycabinet.prototype.lazySet = function(key, value, ...params){\r\n    this.set(key, value).lazySave(...params);\r\n    return this;\r\n  }\r\n}","/**\r\n * Lycabinet Mixin.\r\n */\r\nexport function InitMixin(Lycabinet){\r\n  Lycabinet.prototype._mixins = []; // 实例共享属性\r\n\r\n  Lycabinet.mixin = function (mixinFunc) {\r\n    Lycabinet.prototype._mixins.push(mixinFunc);\r\n    return this;\r\n  };\r\n\r\n  Lycabinet.prototype.__install = function(...options){\r\n    options.unshift(this);\r\n    Lycabinet.prototype._mixins.forEach(func => {\r\n      func.apply(func, options);\r\n    });\r\n  };\r\n}","/**\r\n * 提供接口利用 laction 作为支持\r\n * 利用Laction 进行 lazySave性能进一步优化和增强为节流防抖双支持模式.\r\n * 需要抽离后置执行挂载插件\r\n * 不影响单独使用\r\n * 需要在注册LactionJS实例后才能install成功\r\n * 不能加prototype，仅声明成构造器属性即可\r\n */\r\n\r\nimport { deepSupplement } from \"../utils/util\";\r\n\r\nexport function initImbedding(Lycabinet){\r\n  // Provide as a Laction plugins.\r\n  Lycabinet.install = function(lactionIns, options){\r\n    // Add mixin. Should be called before lycabinet instantiation.\r\n    Lycabinet.mixin(function(lycabinetIns){\r\n      // add some actions for laction conjunction.\r\n      deepSupplement(lycabinetIns.options, {\r\n        useLaction:{\r\n          // the target orbit of bubbled lazy message \r\n          lazyOrbitId: -1, // the last orbit. see: https://github.com/lozyue/laction.git\r\n        }\r\n      });\r\n\r\n      // Register the lazy methods hook.\r\n      lactionIns.registerHook(\r\n        {\r\n          name: lycabinetIns.__root+'_lazysave',\r\n          // apply period throttle.s\r\n          once: true, \r\n          // apply period debounce.\r\n          debounce: true, \r\n          // level: 3, // 1 Root 消息级钩子 // 默认普通消息\r\n          actions: (...params)=>{ \r\n            lycabinetIns.save(...params) \r\n          }, \r\n        },\r\n      );\r\n    });\r\n\r\n    /**\r\n     * lazySave method update\r\n     * OverWrite lazy methods with laction instances. And give it better performance and even visualizaztion.\r\n     * @param {*} lazyOrbitId the added params for laction. \r\n     */\r\n    Lycabinet.prototype.lazySave = function(...params){\r\n      params.unshift(`${this.__root}_lazysave`)\r\n      // bubble with auto period throttle and debounce.\r\n      lactionIns.bubble(params, this.options.useLaction.lazyOrbitId);\r\n      return this;\r\n    };\r\n  };\r\n}\r\n","/**\r\n * Add alias to some methods.\r\n * To custom the using habit for general users.\r\n */\r\n\r\nexport function initAlias(Lycabinet){\r\n  \r\n  Lycabinet.prototype.delete = Lycabinet.prototype.remove;\r\n\r\n  Lycabinet.prototype.read = Lycabinet.prototype.get;\r\n\r\n  Lycabinet.prototype.storage = Lycabinet.prototype.getStore;\r\n\r\n  Lycabinet.prototype.getCabinet = Lycabinet.prototype.getStore;\r\n}","/**\r\n * Add a filter before save the storage.\r\n * You should give a value to the options : includes & excludes.\r\n * (Via to JSON hook)\r\n * @param {*} Lycabinet \r\n */\r\nimport { deepSupplement, is_Defined } from '../utils/util';\r\n\r\nexport function addFilter(Lycabinet){\r\n  /**\r\n   * Set a filter by options\r\n   * Support dot `.` selection expression\r\n   * @param {Object} cabinetIns {includes: [], excludes:[] }\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    const opt = cabinetIns.options;\r\n    if(opt.includes && opt.excludes)\r\n      this.setFilter(); // auto set.\r\n    else{\r\n      deepSupplement(opt, {\r\n        includes: [], // vacant equal to all!\r\n        excludes: [],\r\n      });\r\n    }\r\n  });\r\n\r\n  Lycabinet.prototype.setFilter = function (){\r\n    const _this = this;\r\n    Object.defineProperty(this.getStore(), 'toJSON', {\r\n      configurable: true,\r\n      enumerable: false, // hide in enumeration.\r\n      value: function(){\r\n        console.log(_this);\r\n\r\n        let filtered = Object.create(null);\r\n        // set the basement includes.\r\n        if(_this.options.includes.length>0){\r\n          let includesKeyMap: number[]= [];\r\n          _this.options.includes.forEach( (associatedKey,index)=>{\r\n            let current = includesKeyMap[index] = associatedKey.split(\".\");\r\n            let currentStorage = _this.__storage;\r\n            current.forEach((item, i )=>{\r\n              currentStorage = currentStorage[current[i]];\r\n              // Compliment the non-final selection. \r\n              if( i +1 < current.length && is_Defined( currentStorage )){\r\n                if(!is_Defined(filtered[current[ i ]]) )\r\n                  filtered[current[i]] = {};\r\n                else\r\n                  Object.assign(filtered[current[i]], currentStorage);\r\n              }else\r\n                filtered[current[i]] = currentStorage;\r\n            });\r\n          });\r\n        // if the `includes` option is not configuratted designed, it will mean includes all by default. \r\n        }else Object.assign(filtered, _this.__storage);\r\n        // caculating the exclude filtering.\r\n        let excludesKeyMap: Array<number>= [];\r\n        _this.options.excludes.forEach( (associatedKey, index, arr)=>{\r\n          let current = excludesKeyMap[index] = associatedKey.split(\".\");\r\n          let currentStorage = filtered;\r\n          // instead of forEach to control logical better.\r\n          for(let i=0; i<current.length; i++){\r\n            if(!is_Defined(filtered[current[0]]) ) break;\r\n\r\n            if(is_Defined(currentStorage[current[i]]) )\r\n              currentStorage = currentStorage[current[i]];\r\n            else\r\n              break ;\r\n            // find the target.\r\n            if(i === arr.length-1)\r\n              currentStorage = void 0;\r\n          };\r\n        });\r\n        return filtered;\r\n      },\r\n    });\r\n  }\r\n}","/**\r\n * Using a preset dictionary to compress the json data for storage or transfer. \r\n */\r\n\r\nimport { arrayIndex } from \"../utils/util\";\r\n\r\nexport function addZip(Lycabinet){\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    cabinetIns._on(\"localLoaded\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // todo...\r\n      // console.log(`beforeLocalLoad: length:${final.length}`, final, final.replaceAll(`'`, `\\\"`));\r\n      return final;\r\n    });\r\n    cabinetIns._on(\"localSaved\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // todo...\r\n      // console.log(`beforeLocalSave: length:${final.length}`, final, final.replaceAll(`\\\"`, `'`));\r\n      return final;\r\n    });\r\n  });\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","arrayIndex","arr","index","undefined","length","console","log","Error","toString","curveGet","source","objPathes","interim","item","addStoreListener","invokeQueue","window","addEventListener","eve","forEach","func","invoke","remove","removeArrayItem","push","deepAssign","objs","merged","reduce","target","is_PlainObject","deepSupplement","supplement","current","is_Defined","v","is_Function","Function","indexOf","splice","IDLE","LOADING","onSetted","deepConvert","deepWatch","shallowWatch","plainObjQueue","iterate","unshift","ref","convert","internalValue","create","$addListener","trigger","onProp","$removeListener","handle","propConfig","configurable","writable","rawItem","value","hook","Proxy","receiver","set","newValue","rawValue","triggers","ParticalToken","Lycabinet","options","this","_init","apply","__cabinet","hasStore","__root","getStore","setStore","cabinet","removeStore","$removeStore","InitStore","subscriptions","_on","name","_off","actions","_trigger","params","results","temp","_once","_this","handleFunc","_setlog","Set","keys","concat","testHandle","_logHandle","logHandle","InitEventSystem","initStorage","str","constructor","String","defaultOptions","autoload","lazyPeriod","saveMutex","autoLazy","logEvent","useSharedCabinet","shareCabinet","localInterface","database","localStorage","getItem","setItem","removeItem","concurrence","outerLoad","outerSave","outerClear","success","error","__install","status","__init","writeBackflow","val","__tempStorage","Array","isArray","slice","__storage","assign","load","isVacant","backValue","removed","input","k","clear","onCloud","concurrent","localClear","IgnoreLocal","localApi","pack","onSuccess","onError","msg","reason","e","deepMerge","localLoad","localTemp","initialData","JSON","parse","data","save","check","lazySave","localSave","finalData","stringify","callback","map","InitCore","lastTime","nowTime","Date","getTime","judge","lazySet","InitLazyDepartment","_mixins","mixin","mixinFunc","InitMixin","install","lactionIns","lycabinetIns","useLaction","lazyOrbitId","registerHook","once","debounce","bubble","initImbedding","delete","read","storage","getCabinet","initAlias","cabinetIns","opt","includes","excludes","setFilter","filtered","includesKeyMap","associatedKey","split","currentStorage","i","excludesKeyMap","addFilter","initObserver","lazy","initWatch","$set","pathList","deep","shallow","curveSet","kname","$get","pathName","addObserver","final","_dirty","localContext","warn","useLoadCache","objectSupplement","autoNotifyTabs","notifyTabs","randomToken","addCheck","addZip"],"sourceRoot":""}