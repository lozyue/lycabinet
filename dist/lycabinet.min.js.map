{"version":3,"file":"lycabinet.min.js","mappings":"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","sources":["webpack://Lycabinet/webpack/universalModuleDefinition","webpack://Lycabinet/webpack/bootstrap","webpack://Lycabinet/webpack/runtime/define property getters","webpack://Lycabinet/webpack/runtime/hasOwnProperty shorthand","webpack://Lycabinet/./src/utils/util.ts","webpack://Lycabinet/./src/utils/status.ts","webpack://Lycabinet/./src/extends/filter.ts","webpack://Lycabinet/./src/extends/observer.ts","webpack://Lycabinet/./src/extends/check.ts","webpack://Lycabinet/./src/index.ts","webpack://Lycabinet/./src/core/store.ts","webpack://Lycabinet/./src/core/mixin.ts","webpack://Lycabinet/./src/core/event.ts","webpack://Lycabinet/./src/core/lycabinet.ts","webpack://Lycabinet/./src/core/lazy-support.ts","webpack://Lycabinet/./src/core/immbedding.ts","webpack://Lycabinet/./src/extends/alias.ts","webpack://Lycabinet/./src/extends/zip.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Lycabinet\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lycabinet\"] = factory();\n\telse\n\t\troot[\"Lycabinet\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * Utils.js.\r\n * By lozyue.\r\n */\r\n\r\n/**\r\n * Get the item in an array with index. Support negative index.\r\n * @param  {...any} objs \r\n */\r\nexport const arrayIndex = function (arr, index) {\r\n  index = (arr.length + index) % arr.length;\r\n  if (arr[index] === undefined) {\r\n    DEBUG&& console.error(`The index ${index} in array ${arr.toString()} is overflowed!`);\r\n  }\r\n  return arr[index];\r\n}\r\n\r\n/**\r\n * Get the target curve path value of the source Object.\r\n * The curve path is a sequenced array\r\n * @param source \r\n * @param objPathes \r\n */\r\nexport function curveGet(source: Object, objPathes: string[]){\r\n  let interim = source, item = '';\r\n  for(let index=0; index<objPathes.length; index++){\r\n    item = objPathes[index];\r\n    interim = interim && interim[item]\r\n    if(interim === void 0 ){\r\n      return void 0;\r\n    };\r\n  }\r\n  return interim;\r\n}\r\n\r\n/**\r\n * Set the consistent even curve path of the source Object \r\n * The curve path is a sequenced array // dot split strings.\r\n * @param source \r\n * @param objPathes \r\n * @param {unknown|Function} value The value assign for the curve object target. Support callback that if target value is a function you should set it in call back.\r\n * @returns { number|true } The number indicator the failed position of the conflict path.\r\n */\r\n export function curveSet(source: Object, objPathes: string[], value: ((target: Object, name: string)=>any)| unknown= null){\r\n  let interim = source, item = '';\r\n  // not the last one.\r\n  let index=0;\r\n  for(; index<objPathes.length-1; index++){\r\n    item = objPathes[index];\r\n    if(is_Defined(interim[item]) ){\r\n      if(is_Object(interim[item])){\r\n        interim = interim[item];\r\n      } else {\r\n        // Unexpected non-object value.\r\n        return index;\r\n      }\r\n    } else \r\n      interim = interim[item] = {};\r\n  };\r\n  // the last\r\n  item = objPathes[index];\r\n  // assign the value.\r\n  if(is_Function(value))\r\n    (value as Function)(interim, item);\r\n  else\r\n    interim[item] = value;\r\n  return true;\r\n}\r\n\r\n/**\r\n * Centralized management.\r\n * Add a listener to window storage event.\r\n * @param { Function } invoke Target invoke function or handle. \r\n * @param { Boolean } remove wheather the action is to remove added storage listener.\r\n */\r\nexport const addStoreListener = (()=>{\r\n  const invokeQueue: Function[]= [];\r\n  window.addEventListener(\"storage\", (eve)=>{\r\n    invokeQueue.forEach(func=>{\r\n      func(eve);\r\n    });\r\n  }, false); // default bubble.\r\n\r\n  return (invoke, remove = false)=>{\r\n    if(remove) \r\n      removeArrayItem(invokeQueue, invoke);\r\n    else invokeQueue.push(invoke);\r\n  }\r\n})();\r\n\r\n/**\r\n * Deep Object.assign source to target.\r\n * @param { null|Object, Object... }...objs\r\n */\r\nexport const deepAssign = function (...objs) {\r\n  let merged;\r\n  objs.reduce((target, source) => {\r\n    for (let item in source) {\r\n      if (!(target[item] && is_PlainObject(target[item])) ) {\r\n        target[item] = source[item];\r\n      } else {\r\n        deepAssign(target[item], source[item]);\r\n      }\r\n    }\r\n    merged = target;\r\n    return target;\r\n  }, objs[0]); // The third param is to set default value.\r\n  return merged;\r\n}\r\n\r\n/**\r\n * Deep Object.assign source to target.\r\n * @param target\r\n * @param source\r\n * @param condition Receive the to contacted source and target value and returns the custom result.\r\n */\r\nexport const deepConditionalAssign = function (source, target, condition:null|Function=null ) {\r\n  for (let item in target) {\r\n    if (!(source[item] && is_PlainObject(source[item])) ) {\r\n      // The source Item won't be PlainObject or FalseValue.\r\n      if(!condition)\r\n        source[item] = target[item];\r\n      else\r\n        source[item] = condition(source[item], target[item]);\r\n    } else {\r\n      deepConditionalAssign(source[item], target[item]);\r\n    }\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Just assign the item in supplement which not defined in target.\r\n * If you don't want to override the value of origin Object, supplement is the high performance choice.\r\n * Not deep mode.\r\n * @param {*} target \r\n * @param {*} supplement \r\n */\r\nexport function objectSupplement(target, supplement) {\r\n  let current = null;\r\n  for (let item in supplement) {\r\n    current = target[item];\r\n    if (is_Defined(current))\r\n      continue;\r\n    target[item] = supplement[item];\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * Just assign the item in supplement which not defined in target.\r\n * If you don't want to override the value of origin Object, supplement is the high performance choice.\r\n * Deep mode by iterate each inner Object.\r\n * @param {*} target \r\n * @param {*} supplement \r\n */\r\nexport function deepSupplement<R extends Object, T extends Object> (target: R|null, supplement: T) {\r\n  if(!target) return supplement;\r\n  let current: unknown = null;\r\n  for (let item in supplement) {\r\n    current = (target as unknown as T)[item];\r\n    if (is_Defined(current)) {\r\n      if (!is_PlainObject(current as Object)) continue;\r\n      deepSupplement(current as Object, supplement[item]); // The `current` is a reference which could be assigned.\r\n    }\r\n    else\r\n      // current = supplement[item];\r\n      (target as unknown as T)[item] = supplement[item];\r\n  }\r\n  return target as (R & T);\r\n}\r\n\r\n\r\n/**\r\n * Simple deepClone with optional Function clone\r\n */\r\nexport function deepClone(val, substituteObj = Object.create(null), cloneFunc = true) {\r\n  if (is_PlainObject(val)) {\r\n    var res = substituteObj;\r\n    for (var key in val) {\r\n      res[key] = deepClone(val[key]);\r\n    }\r\n    return res;\r\n  } else if (is_Array(val)) {\r\n    return val.slice()\r\n  } else if (cloneFunc && is_Function(val)) {\r\n    return Object.create(val.prototype).constructor;\r\n  } else {\r\n    return val;\r\n  }\r\n}\r\n\r\nexport function iterateObject(source: Object, iterate: Function){\r\n  iterate(source);\r\n  for(let item in source){\r\n    if( is_PlainObject(source[item]) )\r\n      iterate(source, iterate);\r\n  }\r\n}\r\n\r\nexport const is_Defined = (v: unknown):Boolean => (v !== undefined && v !== null);\r\nexport const is_Object = (obj: unknown):Boolean => (obj instanceof Object || typeof obj === \"object\");\r\nexport const is_PlainObject = (obj: unknown):Boolean => (Object.prototype.toString.call(obj) === '[object Object]');\r\nexport const is_Array = (obj: unknown):Boolean => (Array.isArray && Array.isArray(obj) || obj instanceof Array || (typeof obj === 'object') && Object.prototype.toString.call(obj).slice(-6,-1)=== 'Array' );\r\nexport const is_String = (str: Object):Boolean => ((typeof str === 'string') && str.constructor == String);\r\nexport const is_Function = (obj: unknown):Boolean => (obj instanceof Function);\r\n\r\nexport const is_Empty = (val: unknown)=>{\r\n  if(!val) return true;\r\n  if(is_Array(val)){\r\n    return !(val as Array<unknown>).length;\r\n  }else{\r\n    return !Object.keys((val) as Object).length;\r\n  }\r\n}\r\n\r\n/*\r\n * Delete the Item in an Array, returning the new Array.\r\n */\r\nexport var removeArrayItem = (arr, item) => {\r\n  if (arr.length) {\r\n    let index = arr.indexOf(item);\r\n    if (index > -1) {\r\n      return arr.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Provide with a processor accept a list of stuff or single stuff\r\n * Give it the action to its inner iterator.\r\n * The original Stuff can not be an Array!\r\n */\r\nexport function arbitraryFree(input, func) {\r\n  if (input.forEach) {\r\n    return input.forEach(func);\r\n  } else {\r\n    return func(input, 0);\r\n  }\r\n}\r\n\r\nexport function storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = '__storage_test__';\r\n    storage.setItem(x, x);\r\n    storage.removeArrayItem(x);\r\n    return true;\r\n  }\r\n  catch (e) {\r\n    return e instanceof DOMException && (\r\n      // everything except Firefox\r\n      e.code === 22 ||\r\n      // Firefox\r\n      e.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      e.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\nexport const LogToken = \"[Lycabinet]: \";\r\n\r\nexport const DEBUG = process.env.NODE_ENV !== 'production';\r\n\r\nexport const EnvAssociate = {\r\n  Light: false, // light mode.\r\n};\r\n","/**\r\n * Lycabinet Status.\r\n */\r\n\r\nconst CREATED = 'created';\r\nconst MOUNTED = 'mounted';\r\nconst IDLE = 'idle';\r\nconst LOADING = 'loading';\r\nconst SAVING = 'saving';\r\nconst CLEARING = 'clearing';\r\nconst DESTROYED = 'destroyed';\r\n\r\nexport {\r\n  CREATED,\r\n  IDLE,\r\n  LOADING,\r\n  SAVING,\r\n  CLEARING,\r\n  MOUNTED,\r\n  DESTROYED\r\n};\r\n","/**\r\n * Add a filter before save the storage.\r\n * You should give a value to the options : includes & excludes.\r\n * (Via to JSON hook)\r\n * @param {*} Lycabinet \r\n */\r\nimport { DEBUG, deepClone, deepSupplement, is_Defined } from '../utils/util';\r\n\r\nexport function addFilter(Lycabinet){\r\n  const Proto = Lycabinet.prototype;\r\n  /**\r\n   * Set a filter by options\r\n   * Support dot `.` selection expression\r\n   * @param {Object} cabinetIns {includes: [], excludes:[] }\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    const opt = cabinetIns.options;\r\n    if(opt.includes || opt.excludes){\r\n      cabinetIns._once(\"mounted\", ()=>{\r\n        cabinetIns.setFilter(); // auto set.\r\n      });\r\n    }\r\n    deepSupplement(opt, {\r\n      includes: [], // vacant equals to all!\r\n      excludes: [], // vacant equals to none.\r\n    });\r\n  });\r\n\r\n  Proto.setFilter = function(){\r\n    const _this = this;\r\n\r\n    Object.defineProperty(this.getCabinet(), 'toJSON', {\r\n      configurable: true,\r\n      enumerable: false, // hide in enumeration.\r\n      value: function(){\r\n        const cabinet = _this.getCabinet();\r\n        // set the basement includes.\r\n        const Includes = _this.options.includes;\r\n        const Excludes = _this.options.excludes;\r\n        return CustomFilter(cabinet, Includes, Excludes);\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Allow you appointed the specific Storage Object and \r\n   *  temporary Includes/Excludes options.\r\n   */\r\n  Lycabinet.$filter = CustomFilter;\r\n}\r\n\r\n/**\r\n * Helper Function.\r\n */\r\nfunction CustomFilter(cabinet, Includes, Excludes){\r\n  let filtered = Object.create(null);\r\n  if(Includes.length>0){\r\n    let includesKeyMap: number[]= [];\r\n    Includes.forEach( (associatedKey,index)=>{\r\n      let current = includesKeyMap[index] = associatedKey.split(\".\");\r\n      let currentStore = cabinet;\r\n      let targetStore = filtered;\r\n      current.forEach((item, i )=>{\r\n        currentStore = currentStore[item];\r\n        // Compliment the non-final selection. \r\n        if( i +1 < current.length && is_Defined( currentStore )){\r\n          if(!is_Defined(targetStore[item]) )\r\n            targetStore[item] = {};\r\n          // else\r\n          //   targetStore[item] = currentStore;\r\n        }else\r\n          targetStore[item] = currentStore;\r\n        targetStore = targetStore[item];\r\n      });\r\n\r\n    });\r\n  // if the configuration of `includes` option is not designed, it will mean exactly includes all by default. \r\n  }else Object.assign(filtered, cabinet);\r\n  // caculating the exclude filtering.\r\n  let excludesKeyMap: Array<number>= [];\r\n  let currentStore = deepClone(filtered);\r\n  Excludes.forEach( (associatedKey, index, arr)=>{\r\n    let current = excludesKeyMap[index] = associatedKey.split(\".\");\r\n    let pointer = currentStore;\r\n    for(let i=0; i<current.length; i++){\r\n      console.log({pointer, current: current[i]});\r\n      if(is_Defined(pointer[current[i]]) ){\r\n        // find the target.\r\n        if(i === current.length-1){\r\n          pointer[current[i]] = void 0;\r\n        }\r\n        // continue\r\n        pointer = pointer[current[i]];\r\n      }else\r\n        break ;\r\n    };\r\n  });\r\n  filtered = currentStore;\r\n  return filtered;\r\n}\r\n","/**\r\n * Observer Plugin for Lycabinet\r\n * Adding an mini observer for storage variable listening.\r\n */\r\n\r\nimport { \r\n  curveGet, curveSet, \r\n  removeArrayItem, deepSupplement, is_PlainObject,  \r\n  DEBUG,\r\n  is_Function,\r\n  LogToken\r\n} from \"../utils/util\";\r\n\r\n// change methods.\r\nlet onSetted: Function| null = null;\r\n\r\n/**\r\n * Targets\r\n * @param Lycabinet \r\n */\r\n\r\nexport function addObserver(Lycabinet){\r\n  const Proto = Lycabinet.prototype;\r\n  Proto.initObserver = function(options: any = {}){\r\n    // Override the default options\r\n    Object.assign(options, {\r\n      deepMerge: true,\r\n    });\r\n    // configurate options\r\n    deepSupplement(options, {\r\n      lazy: true,\r\n      initWatch: true, // whether transform the origin property in Observer.\r\n      deepWatch: true, // whether consistently watch the Object type value setted in initial data.\r\n      shallowWatch: false, // whether just watch the surface of the Object.\r\n    });\r\n\r\n    // init proxy Interceptor.\r\n    onSetted = ()=>{\r\n      // this._trigger(\"setItem\");\r\n      options.lazy? this.lazySave(): this.save();\r\n    };\r\n    \r\n    if(!options.initWatch) return false;\r\n    \r\n    this.__storage = deepConvert(this.__storage, options.deepWatch, options.shallowWatch);\r\n    this.setStore(this.__storage);\r\n  };\r\n\r\n  // Convert the path target to be reactive. Check redundant Prevent by default.\r\n  Lycabinet.$set = function(target: Object, pathList: string[], deep=false, shallow =true){\r\n\r\n    // CurveSet the target value.\r\n    return curveSet(target, pathList, (innerTarget, kname)=>{\r\n      // If target is not existed, set to plain Object; Reset the value if it has been converted.\r\n      if(!is_PlainObject(innerTarget[kname])){\r\n        innerTarget[kname] = {};\r\n      }\r\n      if(DEBUG && innerTarget[kname][\"$addListener\"]){\r\n        console.warn(`${LogToken}The target have been converted before!`, innerTarget[kname]);\r\n      }\r\n      innerTarget[kname] = convert(innerTarget[kname], deep, shallow);\r\n    });\r\n  };\r\n\r\n  Lycabinet.$get = function(target: Object, pathList: string[]){\r\n    return curveGet(target, pathList);\r\n  }\r\n\r\n  /**\r\n   * Makes the target to be reactive\r\n   * If the target path is not defined,\r\n   *  it will be assigned as an Object.\r\n   * Warning: If the value in path end is assigned with non-PlainObject type value previously,\r\n   *  the value will be override by `{}`\r\n   */ \r\n  Proto.$set = function(pathName: string, deep=false, shallow =true){\r\n    return Lycabinet.$set(this.__storage, pathName.split('.'), deep, shallow);\r\n  }\r\n  // Makes the target to be reactive\r\n  Proto.$get = function(pathName: string){\r\n    return curveGet(this.__storage, pathName.split('.') );\r\n  }\r\n};\r\n\r\n/**\r\n * Proxy Modules.\r\n * @author lozyue\r\n * @time 2021\r\n */\r\n\r\n// Convert the Object and its descendant Object from bottom to top.\r\nfunction deepConvert(source: Object, deepWatch=true, shallowWatch=false){\r\n  const plainObjQueue: Array<any> = [];\r\n  // reverse for convert\r\n  const iterate = (current)=>{\r\n    plainObjQueue.unshift(current);\r\n    for(let item in current){\r\n      if(is_PlainObject(current[item])){\r\n        iterate(current[item]);\r\n      }\r\n    }\r\n  };\r\n  iterate(source);\r\n  plainObjQueue.forEach((item, index, arr)=>{\r\n    for(let ref in item){\r\n      // convert by reference.\r\n      if(is_PlainObject(item[ref]) )\r\n        arr[index][ref] = convert(item[ref], deepWatch, shallowWatch);\r\n    }\r\n  });\r\n  return convert(source, deepWatch, shallowWatch);\r\n}\r\n\r\n/**\r\n * Convert the normal data to be reactive.\r\n *  todo: add the Array type support.\r\n * @param source \r\n * @param deepWatch \r\n * @param shallowWatch \r\n */\r\ntype OnValueChange = (prop:symbol|string, newValue, oldValue)=>unknown;\r\ntype InternalValueType = {\r\n  _parent: null | unknown,\r\n  $addListener: (t:OnValueChange, onProp: string)=>unknown,\r\n  $removeListener: (h:OnValueChange, onProp: string)=>unknown,\r\n  // trigger: Record<string|symbol, OnValueChange[]>,\r\n  triggers: OnValueChange[],\r\n  value: Object,\r\n};\r\nfunction convert(source: Object, deepWatch = false, shallowWatch = true){\r\n  let internalValue: InternalValueType = Object.create(null);\r\n  // to do... Add trigger bubbule to its parents.\r\n  internalValue._parent = null;\r\n  internalValue.triggers = [];\r\n  // save the values\r\n  internalValue.value = source;\r\n  // Config it!\r\n  const propConfig = {\r\n    enumerable: false, // which is not enumerable in source either.\r\n    configurable: true,\r\n    writable: false,\r\n  };\r\n  const $addListener = (onchange: OnValueChange)=>{    \r\n    return internalValue.triggers.push(onchange);\r\n  };\r\n  const $removeListener = (handle: Function)=>{\r\n    return removeArrayItem(internalValue.triggers, handle);\r\n  };\r\n  // Origin Accessable definition\r\n  const AccessQueue = [\"$addListener\", \"$removeListener\"];\r\n  AccessQueue.forEach((hook, index)=>{\r\n    internalValue[hook] = {value: null} as {value: unknown, trigger: Function[]};\r\n    Object.defineProperty(internalValue, hook, {\r\n      value: !index? $addListener: $removeListener,\r\n      ...propConfig\r\n    });\r\n  });\r\n\r\n  const refValue = internalValue.value; // For reader accel.\r\n  const HandleRules = {\r\n    get(target, prop, receiver) {\r\n      DEBUG && console.info(\"Getted\", target, prop, receiver, internalValue);\r\n      if(AccessQueue.indexOf(prop) > -1){\r\n        return internalValue[prop];\r\n      }\r\n      return refValue[prop];\r\n    },\r\n    set(target, prop, newValue, receiver) {\r\n      DEBUG && console.info(\"Setted\", target, prop, receiver, internalValue);\r\n      const rawValue = refValue[prop];\r\n      // consistent deepWatch observer. \r\n      if(deepWatch){\r\n        if(is_PlainObject(newValue)){\r\n          if(shallowWatch){\r\n            refValue[prop] = convert(newValue, false, true);\r\n          }else{\r\n            refValue[prop] = deepConvert(newValue, deepWatch, false);\r\n          }\r\n        }\r\n      }else\r\n        refValue[prop] = newValue;\r\n\r\n      if(newValue !== rawValue){\r\n        let triggers = internalValue.triggers;\r\n        for(let index=0; index< triggers.length; index++){\r\n          // Check it!\r\n          if(!is_Function(triggers[index]) ){\r\n            throw new Error(`The get proxy handler listener added in target is Not a Function which type is ${typeof triggers[index]}`);\r\n          }\r\n          triggers[index](prop, newValue, rawValue);\r\n        }\r\n        if(onSetted!==null) onSetted();\r\n      }\r\n      return true;\r\n    },\r\n  };\r\n  return new Proxy(source, HandleRules);\r\n}\r\n","/**\r\n * Argument the robustness of the JSON data process.\r\n * And preserve the atomicity when there is multi-tabs opened by user.\r\n * Like delete the Item in Storage if it is vacant.\r\n */\r\n\r\nimport { LycabinetStatic } from \"@/typings/lycabinet\";\r\nimport { addStoreListener, arrayIndex, DEBUG, objectSupplement, removeArrayItem } from \"../utils/util\";\r\n\r\nconst ParticalToken = 'cabinetSyncTabs';\r\nconst TokenSeparator = '|';\r\n\r\nexport function addCheck(Lycabinet){\r\n  /**\r\n   * JSON analysis argumented.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    cabinetIns._on(\"localLoaded\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // add pre-check for JSON Parse.\r\n      if(!final) final = '{}';\r\n      return final;\r\n    });\r\n    cabinetIns._on(\"localSaved\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      return final;\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Add a dirty flag.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    // This is not that precious. Since user can directly modify the __storage Object without a record.\r\n    cabinetIns._on(\"setItem\", function(){\r\n      this._dirty = true;\r\n    });\r\n    cabinetIns._on(\"saved\", function(){\r\n      this._dirty = false;\r\n    })\r\n  });\r\n\r\n  /**\r\n   * Listening the storage event from other tabs(pages)\r\n   *  Custom Events: `storageSync`\r\n   */\r\n  var localContext: Array<LycabinetStatic> = [];\r\n  const cabinetSyncTab = (eve)=>{\r\n    let cabinetIns: LycabinetStatic;\r\n\r\n    let toMatchRoot = eve.key; \r\n    if(ParticalToken===eve.key){\r\n      toMatchRoot = eve.newValue.slice( - eve.newValue.lastIndexOf(TokenSeparator) );\r\n    };\r\n\r\n    for(let index=0; index<localContext.length; index++){\r\n      cabinetIns = localContext[index];\r\n      // Do not do redundant reload if current cabinet is shared by another.\r\n      // We think that in one page the cabinet has the same root is always shared, but there are troubles if\r\n      //  the first instance is collected by GC.\r\n      if(cabinetIns.useLoadCache) continue;\r\n\r\n      // Reload. By default using deeepMerge mode.\r\n      if([cabinetIns.__root].indexOf(toMatchRoot) > -1){\r\n        DEBUG && console.log(\"[Lycabinet]: Synchronizing data from other tabs...\");\r\n        // merge data using default options.\r\n        (cabinetIns.load as Function)({\r\n          onCloud: false, \r\n          concurrent: true, \r\n          deepMerge: true,\r\n          disableMerge: true,\r\n        }); // Considering of the latency on cloud, we only synchronize the data locally.\r\n        (cabinetIns._trigger as Function)(\"storageSync\");\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  addStoreListener( cabinetSyncTab );\r\n  \r\n\r\n  /**\r\n   * Add auto tab synchronize listener options.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    // save the localContext\r\n    localContext.push(cabinetIns);\r\n    // Remove the context.\r\n    cabinetIns._on(\"destroyed\", ()=>{\r\n      removeArrayItem( localContext, cabinetIns);\r\n    });\r\n\r\n    // Add cache check token.\r\n    cabinetIns._on(\"loadFromCache\", function(){\r\n      this.useLoadCache = true; \r\n    });\r\n\r\n    // add options for custom database which is not localStorage.\r\n    objectSupplement(cabinetIns.options, {\r\n      autoNotifyTabs: cabinetIns.options.localInterface.database===window.sessionStorage,\r\n    });\r\n\r\n    cabinetIns._on(\"saved\", function(onCloud, concurrent){\r\n      if(this.options.autoNotifyTabs){\r\n        const IgnoreLocal = onCloud && !concurrent;\r\n        if(IgnoreLocal){\r\n          return false;\r\n        }\r\n\r\n        this.notifyTabs();\r\n      }\r\n    });\r\n  });\r\n\r\n  /**\r\n   * If the database in configuration is not `LocalStorage` (eg Env `sessionStorage`)\r\n   * You should call this method to notify the other pages or set prop `autoNotifyTabs` to true.\r\n   */\r\n  Lycabinet.prototype.notifyTabs = function(){\r\n    const randomToken = new Date().getTime();\r\n    // this will give other pages a notifycation.\r\n    const storage = window.localStorage;\r\n    try{\r\n      storage.setItem(ParticalToken, `${this.__root}${TokenSeparator}${randomToken}`);\r\n    } catch(err){\r\n      if(err instanceof DOMException && (\r\n        // everything except Firefox\r\n        err.code === 22 ||\r\n        // Firefox\r\n        err.code === 1014 ||\r\n        // test name field too, because code might not be present\r\n        // everything except Firefox\r\n        err.name === 'QuotaExceededError' ||\r\n        // Firefox\r\n        err.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n        // acknowledge QuotaExceededError only if there's something already stored\r\n        (storage && storage.length !== 0)\r\n      )\r\n        console.error(\"[lycabinet]: Sync storage from tabs failed cause LocalStorage is not supportted!\", err);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Lycabinet JS\r\n * Full build.\r\n */\r\n\r\nimport { InitStore } from './core/store';\r\nimport { InitEventSystem } from './core/event';\r\nimport { InitCore } from './core/lycabinet';\r\nimport { InitLazyDepartment } from './core/lazy-support';\r\nimport { InitMixin } from \"./core/mixin\";\r\n\r\nimport { initImbedding } from './core/immbedding';\r\nimport { initAlias } from './extends/alias';\r\nimport { addFilter } from './extends/filter';\r\nimport { addObserver } from './extends/observer';\r\n\r\nimport { addCheck } from './extends/check';\r\nimport { addZip } from './extends/zip';\r\n\r\n\r\nfunction Lycabinet(...options){\r\n  if (process.env.NODE_ENV !== 'production' && !(this instanceof Lycabinet) ) {\r\n    (global.warn || console.warn)('Lycabinet is a constructor and should be called with the `new` keyword');\r\n    return null;\r\n  }\r\n  this.__init.apply(this, options);\r\n}\r\n\r\nInitStore(Lycabinet);\r\nInitMixin(Lycabinet);\r\nInitEventSystem(Lycabinet);\r\nInitCore(Lycabinet);\r\nInitLazyDepartment(Lycabinet);\r\n\r\ninitImbedding(Lycabinet);\r\ninitAlias(Lycabinet);\r\n\r\naddFilter(Lycabinet);\r\naddObserver(Lycabinet);\r\n\r\naddCheck(Lycabinet);\r\naddZip(Lycabinet);\r\n\r\nexport default Lycabinet;\r\n","/**\r\n * Given a private cabinet for every set storage.\r\n * Cabinet Basement.\r\n */\r\n\r\nimport { DEBUG, is_Defined, is_PlainObject } from \"../utils/util\";\r\n\r\nexport function InitStore(Lycabinet){\r\n  const __cabinet = Object.create(null);\r\n  DEBUG && (window[\"__cabinet\"] = __cabinet);\r\n  const Proto = Lycabinet.prototype;\r\n\r\n  /**\r\n   * Get the exact cabinet of current instance.\r\n   */\r\n  Proto.getCabinet = function(){\r\n    return this.__storage;\r\n  }\r\n\r\n  /**\r\n   * Check cache consistent.\r\n   * Conclude whether the current cabinet is consistent with the inner cache.\r\n   * @returns { Boolean }\r\n   */\r\n  Proto.isIdentical = function(){\r\n    return this.__storage === __cabinet[this.__root];\r\n  }\r\n\r\n  Proto.hasStore = function(){\r\n    return is_Defined(__cabinet[this.__root]) && is_PlainObject(__cabinet[this.__root]);\r\n  }\r\n\r\n  /**\r\n   * Get the cached cabinet access.\r\n   * @returns {Plain Object} __cabinet ; The reference of the storage Object property been cached.\r\n   * Each instance is shared by the root key.\r\n   */\r\n  Proto.getStore = function(){\r\n    return __cabinet[this.__root];\r\n  }\r\n  \r\n  /**\r\n   * To initialize the cabinet cache. \r\n   * @param {Plain Object} cabinet \r\n   */\r\n  Proto.setStore = function(cabinet){\r\n    __cabinet[this.__root] = cabinet;\r\n  }\r\n\r\n  /**\r\n   * To clear the inner cache of cabinet.\r\n   * Defaultly prevent sharing elimination.\r\n   */\r\n  Proto.removeStore = function(){\r\n    if(this.options.useSharedCabinet \r\n      || !this.options.shareCabinet \r\n      || !this.isIdentical()\r\n    ) return false;\r\n    __cabinet[this.__root] = void 0;\r\n    return true;\r\n  }\r\n\r\n  Lycabinet.$removeStore = function(root: string){\r\n    __cabinet[root] = void 0;\r\n  }\r\n\r\n  DEBUG && (Lycabinet.$getStore = function(root: string){\r\n    return __cabinet[root];\r\n  });\r\n}\r\n","/**\r\n * Lycabinet Mixin.\r\n */\r\nexport function InitMixin(Lycabinet){\r\n  Lycabinet.prototype._mixins = []; // Shared by instances.\r\n\r\n  Lycabinet.mixin = function (mixinFunc) {\r\n    Lycabinet.prototype._mixins.push(mixinFunc);\r\n    return this;\r\n  };\r\n\r\n  Lycabinet.prototype.__install = function(...options){\r\n    options.unshift(this);\r\n    Lycabinet.prototype._mixins.forEach(func => {\r\n      func.apply(func, options);\r\n    });\r\n  };\r\n}","/**\r\n * Event system provided.\r\n * Have weak hook fundamental at same time.\r\n */\r\nimport { CabinetEventType } from '@/typings/lycabinet';\r\nimport { removeArrayItem, is_Function, DEBUG, arrayIndex, EnvAssociate, is_Defined } from '../utils/util';\r\n\r\nexport function InitEventSystem(Lycabinet){\r\n  let preOwnner = null;\r\n  Lycabinet.mixin(function(self){\r\n    let subscriptions: Object = null as unknown as Object; \r\n\r\n    if(self!==preOwnner){\r\n      subscriptions = Object.create(null);\r\n    }\r\n    preOwnner = self;\r\n\r\n    self._on = function(name: CabinetEventType, func: Function){\r\n      if(DEBUG &&!is_Function(func)){\r\n        throw new Error(\"[Laction]:The second parameter of _on method must be a callback function!\");\r\n      }\r\n      \r\n      subscriptions||(subscriptions = Object.create(null))\r\n      const actions = subscriptions[name] || (subscriptions[name] = []);\r\n      actions.push(func);\r\n    };\r\n    \r\n    self._off = function(name: CabinetEventType, handle: Function){\r\n      const actions = subscriptions[name] || (subscriptions[name] = []);\r\n      removeArrayItem(actions, handle);\r\n    };\r\n  \r\n    self._trigger = function(name: CabinetEventType, ...params){\r\n      const actions = subscriptions[name] || (subscriptions[name] = []);\r\n      // add trigger mark\r\n      if(!actions.counter) actions.counter=0;\r\n      actions.counter++;\r\n      \r\n      const results: Array<unknown>= [];\r\n      let preLen = actions.length;\r\n      params.push(results);\r\n      for(let index=0; index<preLen; index++){\r\n        let temp = actions[index].apply(this, params);\r\n        is_Defined(temp) && results.push( temp );\r\n        if(preLen !== actions.length){\r\n          index--;\r\n          preLen = actions.length;\r\n        }\r\n      }\r\n      // returns last param if there is no hook. Using the last param to set the default value.\r\n      return results.length>0\r\n        ? arrayIndex(results, -1)\r\n        : params.length>1\r\n          ? arrayIndex(params, -2)\r\n          : null;\r\n    };\r\n  \r\n    self._once = function(name: CabinetEventType, func: Function, instantOnTriggered: number|boolean = 0){\r\n      const subs = subscriptions[name] || (subscriptions[name] = []);\r\n      if(subs.counter && instantOnTriggered!==false && ~~instantOnTriggered <= subs.counter ){\r\n        func(subs.counter);\r\n        return ;\r\n      }\r\n      var handleFunc = function(...params){\r\n        func.apply(this, params);\r\n        this._off(name, handleFunc);\r\n      }; \r\n      this._on(name, handleFunc);\r\n    };\r\n\r\n    self._isHappend = function(name: CabinetEventType, counts: number=0){\r\n      return (subscriptions[name] || (subscriptions[name] = [])).counter > counts;\r\n    }\r\n  \r\n    // for Debug\r\n    !EnvAssociate.Light && (self._setlog = function(){\r\n      if(!Lycabinet.DEBUG) return false;\r\n\r\n      const presets: CabinetEventType[] = [\r\n        'created','mounted', \r\n        'beforeLoad', 'beforeLocalLoad', 'localLoaded', 'loaded', \r\n        'loadFromCache',\r\n        'storageSync',\r\n        'setItem', 'writeLock', 'writeBackflow', \r\n        'getItem', 'removeItem', \r\n        'lazySave', \r\n        'beforeSave', 'beforeLocalSave', 'localSaved', 'saved', 'busy',\r\n        'beforeClear', 'beforeLocalClear', 'localCleared', 'cleared',\r\n        'error', 'destroyed',\r\n      ];\r\n  \r\n      new Set(Object.keys(subscriptions).concat(presets) ).forEach(item=>{\r\n        let testHandle = subscriptions[item] && subscriptions[item]._logHandle;\r\n        if(testHandle){\r\n          this._off(item, testHandle)\r\n        }\r\n        const logHandle = ()=>{\r\n          Lycabinet.DEBUG &&\r\n          console.log(`[Lycabinet${Lycabinet.SeparateLog?'-'+this.__root:''}]:Triggered the event: '${item}'`);\r\n        };\r\n\r\n        this._on(item, logHandle);\r\n        subscriptions[item]._logHandle = logHandle;\r\n      });\r\n      return true;\r\n    });\r\n    \r\n  });\r\n}","/**\r\n * lycabinet.js\r\n * A slight JSON Type Object storage helper with good performance.\r\n * 一个适用于JSON对象数据存储的轻量辅助类。\r\n * @author Lozyue\r\n * @createdTime 2021-03-28\r\n */\r\n\r\nimport { ConstructOptions, AccessOptions } from '@/typings/lycabinet';\r\nimport * as _STATUS from '@/utils/status';\r\nimport { \r\n  deepAssign, arbitraryFree, \r\n  is_Defined, is_PlainObject, is_Empty, is_String,\r\n  LogToken, DEBUG, deepConditionalAssign, \r\n} from '@/utils/util';\r\n\r\nexport function InitCore(Lycabinet){\r\n  // Constructor Options\r\n  Lycabinet.DEBUG = true;\r\n  Lycabinet.SeparateLog = false;\r\n\r\n  const Proto = Lycabinet.prototype;\r\n  /**\r\n   * The configuration initialization.\r\n   * @param { String } root \r\n   * @param { Object } options \r\n   */\r\n  Proto.__init = function(root: string, options: Partial<ConstructOptions> = {} ){\r\n\r\n    if(options.initStorage && !is_PlainObject(options.initStorage) ){\r\n      throw new Error(`${LogToken}The type of the provided option \"initStorage\" must be an Object!`);\r\n    }\r\n    if( !is_String(root)) \r\n      throw new Error(`${LogToken}The param \"root\" should be an string, than type ${typeof root}!`);\r\n    this.__root = (root || 'lycabinet') + ''; // The key in storage. Must be a string.\r\n\r\n    // default options.\r\n    const defaultOptions = {\r\n      root: this.__root,\r\n      autoload: true,\r\n      lazyPeriod : ~~(options.lazyPeriod as number) || 5000, // set the lazy period of lazySave methods.\r\n      saveMutex: true,\r\n      autoLazy: true, // Call lazy save automaticly when the save is busy. \r\n      logEvent: false, // use this to log event globally from scratch\r\n      useSharedCabinet: true, // use global shared cabinet\r\n      shareCabinet: true, // share the cabinet for global\r\n      // Weather use deepAssign to contact when load from outer data.\r\n      deepMerge: false, \r\n      customMerge: null, // Applying just on loading.\r\n      // local interfaces of storage\r\n      localInterface: {\r\n        database: window.localStorage,\r\n        getItem: \"getItem\",\r\n        setItem: \"setItem\",\r\n        removeItem: \"removeItem\",\r\n      }, \r\n      concurrent: !!(options.outerLoad || options.outerSave || options.outerClear),\r\n      outerLoad: null,\r\n      outerSave: null,\r\n      outerClear: null,\r\n    };\r\n    this.options = deepAssign(defaultOptions, options);\r\n    // Make the privilege.\r\n    this.__install(defaultOptions);\r\n    \r\n    // root event console log\r\n    if(defaultOptions.logEvent) this._setlog();\r\n\r\n    this.status = _STATUS.CREATED;\r\n    this._trigger(\"created\");\r\n    \r\n    if(defaultOptions.autoload) this._init(options.initStorage || Object.create(null) );\r\n  };\r\n\r\n  /**\r\n   * Initialize the cabinet storage before 'CURD' manipulation.\r\n   * If autoload is not setted, you should call this manually.\r\n   * Todo: add reduplicate._init check and warning.\r\n   */\r\n  Proto._init = function(cabinet = null){\r\n    cabinet = cabinet || this.options.initStorage || Object.create(null);\r\n    // write protection backflow\r\n    const writeBackflow = function(){\r\n      if(is_Empty(this.__tempStorage)) return;\r\n      // backflow\r\n      deepAssign(this.__storage, this.__tempStorage);\r\n      this.__tempStorage = Object.create(null);\r\n      this._trigger(\"writeBackflow\");\r\n    }\r\n    this._on(\"loaded\", writeBackflow);\r\n    this._on(\"cleared\", writeBackflow);\r\n\r\n    // override the options by the already existed cabinet.\r\n    // this is global shared with all the instance in the page.\r\n    const isLoadFromCache = this.options.useSharedCabinet && this.hasStore();\r\n    if(isLoadFromCache){\r\n      // this.__storage = cabinet = this.getStore(); // That's useless cause cabinet is just a Object reference.\r\n      this.__storage = this.getStore();\r\n      // Sync status.\r\n      Object.assign(cabinet, this.__storage);\r\n      this._trigger(\"loadFromCache\");\r\n    }\r\n    else{\r\n      this.__storage = this.__storage || cabinet;\r\n      if(this.options.shareCabinet)\r\n        this.setStore(this.__storage);\r\n    }\r\n\r\n    this.status = _STATUS.MOUNTED;\r\n    this._trigger(\"mounted\"); // Interior cabinet access attainable.\r\n\r\n    if(!isLoadFromCache){\r\n      // Auto load. Only when the cabinet in using is private.\r\n      if(this.options.autoload) this.load(); // default using shallow assign.\r\n      else this.status = _STATUS.IDLE; // Amend the status.\r\n    } else {\r\n      this.status = _STATUS.IDLE; // Amend the status.\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Test the cabinet is busy or not.\r\n   */\r\n  Proto.isVacant = function(){\r\n    return this.status===_STATUS.IDLE;\r\n  }\r\n\r\n  /**\r\n   * Set an item with key.\r\n   * Added write protection on stage of loading and clearing.\r\n   * @param {*} key \r\n   * @param {*} value \r\n   */\r\n  Proto.set = function(key, value){\r\n    const MutexStatus = [_STATUS.LOADING, _STATUS.CLEARING];\r\n    // add write protection.    \r\n    if(MutexStatus.indexOf(this.status) > -1){\r\n      this._trigger(\"writeLock\");\r\n      this.__tempStorage = this.__tempStorage || (this.__tempStorage = Object.create(null));\r\n      this.__tempStorage[key] = value;\r\n      return this;\r\n    }\r\n\r\n    this.__storage[key] = value;\r\n    this._trigger('setItem', key, value);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Get the value of an item by key.\r\n   * Please don't read from loading and clearing stream.\r\n   * @param {*} key \r\n   */\r\n  Proto.get = function(key){\r\n    let backValue = this.__storage[key];\r\n    this._trigger('getItem', key, backValue);\r\n    return backValue;\r\n  }\r\n\r\n  /**\r\n   * Delete an item by key.\r\n   */ \r\n  Proto.remove = function(keys: string|string[]){\r\n    let removed = false;\r\n    arbitraryFree(keys, (k)=>{\r\n      // Though it isn't disappeared immediately, But after JSON parse and stringify manipulations this will be cleared.\r\n      if(this.__storage.hasOwnProperty(k)){\r\n        this.set(k, void 0);\r\n        removed = true;\r\n      }\r\n    });\r\n    removed && this._trigger('removeItem', keys, removed);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Delete the cabinet directly.\r\n   * But the data may still exist in memory(RAM).  \r\n   * @param {Boolean} onCloud \r\n   * @param {Boolean} concurrent Override the default options in `this.options.concurrent`\r\n   */\r\n  Proto.clear = function(option: AccessOptions & { reset?: boolean } = {}){\r\n    // merge default options.\r\n    const concurrent = is_Defined(option.concurrent)? option.concurrent: this.options.concurrent;\r\n    const onCloud = (is_Defined(option.onCloud)? option.onCloud: !!this.options.outerClear) as boolean;\r\n    this.status = _STATUS.LOADING;\r\n    this._trigger('beforeClear');\r\n    \r\n    // Local clear\r\n    let localClear = ()=>{\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalClear', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(`${LogToken}The local clear action is ignored by options: concurrent:false.`);\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      localApi.database[localApi.removeItem]( this.__root );\r\n      // trigger hook event after call local database to clear the Item.\r\n      this._trigger('localCleared', this.__root); // Give the param of the remove target. \r\n    }\r\n\r\n    const toEnd = (isSuccess: boolean)=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('cleared', onCloud, concurrent);\r\n      // Callback\r\n      option.onceDone && option.onceDone(isSuccess, onCloud);\r\n    };\r\n\r\n    // Cloud clear\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = ()=>{\r\n      toEnd(true);\r\n    }\r\n    const onError = (msg, reason='cloudClearings')=>{\r\n      toEnd(false);\r\n\r\n      if(this._trigger(\"error\", \"clear\", reason) !== true ){\r\n        onCloud && console.error(`${LogToken}Failed tfo Clear the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n      }\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      // Reset the inner cabinet to vacant Object.\r\n      if(option.reset){\r\n        Reflect.ownKeys(this.__storage).forEach(item=>{\r\n          delete this.__storage[item];\r\n        });\r\n      }\r\n\r\n      localClear();\r\n      if(onCloud) \r\n        this.options.outerClear(pack, onSuccess, onError);\r\n      else {\r\n        toEnd(true);\r\n      }\r\n    } catch(e){\r\n      onError(e, \"unknown\");\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Load the cabinet on initialization.\r\n   * The local load is faster than cloud.\r\n   * @param { Boolean } onCloud \r\n   * @param { Boolean } concurrent Override the default options in `this.options.concurrent`\r\n   * @param { Boolean } deepMerge Using deepAssign instead of Object.assign to merge the data from local and cloud.\r\n   */\r\n  Proto.load = function(option: AccessOptions & { disableMerge?: boolean} = {}){\r\n    // merge default options.\r\n    const concurrent = is_Defined(option.concurrent)? option.concurrent: this.options.concurrent;\r\n    const onCloud = (is_Defined(option.onCloud)? option.onCloud: !!this.options.outerLoad) as boolean;\r\n    const deepMerge = is_Defined(option.deepMerge)? ~~(option.deepMerge as Boolean): this.options.deepMerge;\r\n    this.status = _STATUS.LOADING;\r\n    this._trigger(\"beforeLoad\");\r\n\r\n    // Local load \r\n    let localLoad = ()=>{\r\n      let localTemp = null;\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalLoad', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"${LogToken}The local load action is ignored by options: concurrent=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      \r\n      let initialData = localApi.database[localApi.getItem]( this.__root );\r\n      // trigger hook event after call local database to parse the value. \r\n      // Should have a return value in event. (data)=>{ return handle(data); }\r\n      initialData = this._trigger('localLoaded', initialData); // Only take effect on the last element.\r\n\r\n      localTemp = JSON.parse( initialData );\r\n      if(deepMerge){\r\n        if(option.disableMerge)\r\n          deepAssign(this.__storage, localTemp);\r\n        else\r\n          deepConditionalAssign(this.__storage, localTemp, this.options.customMerge);\r\n      }else\r\n        Object.assign(this.__storage, localTemp);\r\n    };\r\n\r\n    const toEnd = (isSuccess: boolean)=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('loaded', onCloud, concurrent);\r\n      // Callback\r\n      option.onceDone && option.onceDone(isSuccess, onCloud);\r\n    }\r\n\r\n    // Cloud load\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = (data)=>{\r\n      if(!is_Defined(data) || !is_PlainObject(data))\r\n        throw new Error(`${LogToken}Load cabinet with empty 'data' which type is ${typeof data}`);\r\n        \r\n      if(deepMerge){\r\n        if(option.disableMerge)\r\n          deepAssign(this.__storage, data);\r\n        else\r\n          deepConditionalAssign(this.__storage, data, this.options.customMerge);\r\n      }else \r\n      // shallow assign makes cloud weight heavier.\r\n        Object.assign(this.__storage, data);\r\n      \r\n      toEnd(true);\r\n    }\r\n    const onError = (msg, reason='cloudLoadings')=>{\r\n      toEnd(false);\r\n\r\n      if(this._trigger(\"error\", \"load\", reason) !== true){\r\n        onCloud && console.error(`${LogToken}Failed to Load the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n      }\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localLoad();\r\n      if(onCloud) \r\n        this.options.outerLoad(pack, onSuccess, onError);\r\n      else {\r\n        toEnd(true);\r\n      }\r\n    } catch(e){\r\n      onError(e, \"unknown\");\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Save the cabinet to database or cloud.\r\n   * The event `localSaved` is called before real action for storage hook.\r\n   * @param {*} onCloud \r\n   * @param {Boolean} concurrent Override the default options in `this.options.concurrent`\r\n   */\r\n  Proto.save = function(option: AccessOptions = {}){\r\n    // merge default options.\r\n    const onCloud = (is_Defined(option.onCloud)? option.onCloud: !!this.options.outerSave) as boolean;\r\n    const concurrent = is_Defined(option.concurrent)? option.concurrent: this.options.concurrent;\r\n\r\n    // check the status for mutex protection\r\n    let check = this.options.saveMutex && !this.isVacant();\r\n    this._trigger(\"beforeSave\", check);\r\n    if( check ){\r\n      DEBUG && console.log(`${LogToken}The 'save' manipulation is deserted for busy. Current Status: ${this.status} .Set 'saveMutex' false to disable it.`);\r\n      this._trigger(\"busy\", this.status);\r\n      this.options.autoLazy && this.lazySave(onCloud, concurrent);\r\n      return this;\r\n    }\r\n    \r\n    this.status = _STATUS.SAVING;\r\n\r\n    // Local save \r\n    let localSave = ()=>{\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalSave', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"${LogToken}The local save action is ignored by options: concurrent=false.\");\r\n        return this;\r\n      }\r\n      // trigger hook event beforeLocalSave. Should have a return value in event. (data)=>{ return handle(data); }\r\n      let finalData = JSON.stringify(this.__storage );\r\n      // trigger hook event before call local database to save the value for data interceptor.\r\n      finalData = this._trigger('localSaved', finalData); // Only take effect on the last element.\r\n\r\n      const localApi = this.options.localInterface;\r\n      localApi.database[localApi.setItem](this.__root, finalData);\r\n    };\r\n    \r\n    const toEnd = (isSuccess: boolean)=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('saved', onCloud, concurrent);\r\n      // Callback\r\n      option.onceDone && option.onceDone(isSuccess, onCloud);\r\n    }\r\n\r\n    // Cloud save\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = ()=>{\r\n      toEnd(true);\r\n    }\r\n    const onError = (msg, reason=\"cloudSavings\")=>{\r\n      toEnd(false);\r\n\r\n      if(this._trigger(\"error\", \"save\", reason) !== true){\r\n        onCloud && console.error(`${LogToken}Failed to Save the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n      }\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localSave();\r\n      if(onCloud) \r\n        this.options.outerSave(pack, onSuccess, onError);\r\n      else {\r\n        toEnd(true);\r\n      }\r\n    } catch(e){\r\n      onError(e, 'unknown');\r\n    }\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * Map methods support.\r\n   * Iterate the first hierarchy with callback.\r\n   * @param {Function: (item, key, cabinet)=>any }} callback with two params\r\n   */\r\n  Proto.forEach = function(callback: (item: any, key: string, cabinet: Object)=>any){\r\n    let item;\r\n    const cabinet = this.__storage;\r\n    for(let key in cabinet){\r\n      item = cabinet[key];\r\n      callback(item, key, cabinet); // only two params.\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Foreach methods support.\r\n   * Iterate the first hierarchy with callback.\r\n   * @param {Function: (item, key, cabinet)=>any }} callback  with two params\r\n   */\r\n  Proto.map = function(callback: (item: any, key: string, cabinet: Object)=>any){\r\n    let item;\r\n    const cabinet = this.__storage;\r\n    for(let key in cabinet){\r\n      item = cabinet[key];\r\n      cabinet[key] = callback(item, key, cabinet); // only two params.\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For custom destroy.\r\n   * Call it to clear the sideEffect produce by kinds of plugins.\r\n   */\r\n  Proto.destroy = function(autoClear = true){\r\n    if(autoClear){\r\n      this.clear({\r\n        reset: true,\r\n        onCloud: false, \r\n        concurrent: false,\r\n      });\r\n      this.removeStore();\r\n    }\r\n\r\n    this.status = _STATUS.DESTROYED;\r\n    this._trigger(\"destroyed\");\r\n  }\r\n\r\n}\r\n","/**\r\n * Lazy methods support.\r\n * @param {*} Lycabinet \r\n */\r\nimport { DEBUG } from \"@/utils/util\";\r\n\r\nexport function InitLazyDepartment(Lycabinet){\r\n  \r\n  /**\r\n   * Add lazySave support.\r\n   * The params is the same to save methods.\r\n   */\r\n  Lycabinet.prototype.lazySave = (function(){\r\n    var lastTime = 0;\r\n    return function(...params){\r\n      var nowTime = new Date().getTime();\r\n      // The gap is not so accurate but enough.\r\n      let judge = nowTime - lastTime > 5000; //this.options.lazyPeriod;\r\n      this._trigger(\"lazySave\", judge);\r\n      if (judge) {\r\n        lastTime = nowTime; // first!\r\n        // Use default settings\r\n        DEBUG && console.log(\"Lazy executed!\", nowTime, lastTime, judge)\r\n        this.save(...params);\r\n      }\r\n      return this;\r\n    }\r\n  })();\r\n\r\n  /**\r\n   * Just calling lazySave after save called.\r\n   * @param {*} key \r\n   * @param {*} value \r\n   * @param {...any} params parameters to lazySave (). \r\n   */\r\n  Lycabinet.prototype.lazySet = function(key, value, ...params){\r\n    this.set(key, value).lazySave(...params);\r\n    return this;\r\n  }\r\n}","/**\r\n * 提供接口利用 laction 作为支持, 影响后续所有实例\r\n * 利用Laction 进行 lazySave 性能进一步优化和增强为节流防抖双支持模式.\r\n * \r\n * // Usage:\r\n * import Lycabinet\r\n * // Existed instance of Laction\r\n * lactionIns.use(Lycabinet);\r\n * \r\n * When enabled immbedding, you should manually call the `destroy` method\r\n *  to discard the instance(Especially there is not only one).\r\n */\r\n\r\nimport { DEBUG, deepSupplement } from \"../utils/util\";\r\n\r\nexport function initImbedding(Lycabinet){\r\n  // Provide as a Laction plugins.\r\n  Lycabinet.install = function(lactionIns, options){\r\n    // Add mixin. Should be called before lycabinet instantiation.\r\n    Lycabinet.mixin(function(lycabinetIns){\r\n      // add some actions for laction conjunction.\r\n      deepSupplement(lycabinetIns.options, {\r\n        useLaction:{\r\n          // the target orbit of bubbled lazy message \r\n          lazyOrbitId: -1, // the last orbit. see: https://github.com/lozyue/laction.git\r\n        }\r\n      });\r\n\r\n      let LazyRootKey = lycabinetIns.__root+'_lazy';\r\n      // Accept pre-redundant postfix.\r\n      const LazyKey = lactionIns.testHookName(LazyRootKey, true);\r\n      lycabinetIns.getLazyKey = ()=>LazyKey;\r\n      lycabinetIns._lazyKey = LazyKey;\r\n\r\n      // Register the lazy methods hook.\r\n      lactionIns.registerHook(\r\n        {\r\n          name: LazyKey,\r\n          // apply period throttle.s\r\n          once: true, \r\n          // apply period debounce.\r\n          debounce: true, \r\n          // level: 3, // 1 Root 消息级钩子 // 默认普通消息\r\n          action: (...params)=>{\r\n            // Fix a big trouble of save action rewrite with laction if there are multi-instances.\r\n            // console.log(lycabinetIns)\r\n            \r\n            lycabinetIns.save(...params) \r\n          },\r\n        },\r\n      );\r\n\r\n      lycabinetIns._on(\"destroyed\", ()=>{\r\n        lactionIns.unregisterHook(LazyKey);\r\n      });\r\n    });\r\n\r\n    /**\r\n     * lazySave method update\r\n     * OverWrite lazy methods with laction instances. \r\n     *  And give it better performance and even visualizaztion.\r\n     * @param {*} lazyOrbitId the added params for laction. \r\n     */\r\n    Lycabinet.prototype.lazySave = function(...params){\r\n      // Get the key of Auto generated.\r\n      params.unshift( this._lazyKey );\r\n      // bubble with auto period throttle and debounce.\r\n      \r\n      lactionIns.bubble(params, this.options.useLaction.lazyOrbitId, false);\r\n      this._trigger(\"lazySave\");\r\n      return this;\r\n    };\r\n  };\r\n}\r\n","/**\r\n * Add alias to some methods.\r\n * To custom the using habit for general users.\r\n */\r\n\r\nexport function initAlias(Lycabinet){\r\n  const Proto = Lycabinet.prototype;\r\n  \r\n  Proto.delete = Proto.remove;\r\n\r\n  Proto.read = Proto.get;\r\n\r\n  Proto.storage = Proto.getCabinet;\r\n\r\n  Proto.isConsistent = Proto.isIdentical;\r\n}","/**\r\n * Using a preset dictionary to compress the json data for storage or transfer. \r\n */\r\n\r\nimport { arrayIndex } from \"../utils/util\";\r\n\r\nexport function addZip(Lycabinet){\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    cabinetIns._on(\"localLoaded\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // todo...\r\n      // console.log(`beforeLocalLoad: length:${final.length}`, final, final.replaceAll(`'`, `.`));\r\n      return final;\r\n    });\r\n    cabinetIns._on(\"localSaved\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // todo...\r\n      // console.log(`beforeLocalSave: length:${final.length}`, final, final.replaceAll(`.`, `'`));\r\n      return final;\r\n    });\r\n  });\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","arrayIndex","arr","index","undefined","length","DEBUG","console","error","toString","curveGet","source","objPathes","interim","item","addStoreListener","invokeQueue","window","addEventListener","eve","forEach","func","invoke","remove","removeArrayItem","push","deepAssign","objs","merged","reduce","target","is_PlainObject","deepConditionalAssign","condition","deepSupplement","supplement","current","is_Defined","deepClone","val","substituteObj","create","cloneFunc","res","is_Array","slice","is_Function","constructor","v","Array","isArray","Function","indexOf","splice","LogToken","IDLE","LOADING","CustomFilter","cabinet","Includes","Excludes","filtered","includesKeyMap","associatedKey","split","currentStore","targetStore","i","assign","excludesKeyMap","pointer","log","onSetted","deepConvert","deepWatch","shallowWatch","plainObjQueue","iterate","unshift","ref","convert","internalValue","_parent","triggers","value","propConfig","configurable","writable","$addListener","onchange","$removeListener","handle","AccessQueue","hook","refValue","Proxy","receiver","info","set","newValue","rawValue","Error","ParticalToken","Lycabinet","options","this","__init","apply","__cabinet","Proto","getCabinet","__storage","isIdentical","__root","hasStore","getStore","setStore","removeStore","useSharedCabinet","shareCabinet","$removeStore","$getStore","InitStore","_mixins","mixin","mixinFunc","__install","InitMixin","preOwnner","subscriptions","_on","name","_off","actions","_trigger","params","counter","results","preLen","temp","_once","instantOnTriggered","subs","handleFunc","_isHappend","counts","_setlog","Set","keys","concat","testHandle","_logHandle","logHandle","SeparateLog","InitEventSystem","initStorage","str","String","defaultOptions","autoload","lazyPeriod","saveMutex","autoLazy","logEvent","deepMerge","customMerge","localInterface","database","localStorage","getItem","setItem","removeItem","concurrent","outerLoad","outerSave","outerClear","status","_init","writeBackflow","__tempStorage","isLoadFromCache","load","isVacant","backValue","removed","input","k","clear","option","onCloud","localClear","IgnoreLocal","localApi","toEnd","isSuccess","onceDone","pack","onSuccess","onError","msg","reason","reset","Reflect","ownKeys","e","localLoad","localTemp","initialData","JSON","parse","disableMerge","data","save","check","lazySave","localSave","finalData","stringify","callback","map","destroy","autoClear","InitCore","lastTime","nowTime","Date","getTime","judge","lazySet","InitLazyDepartment","install","lactionIns","lycabinetIns","useLaction","lazyOrbitId","LazyRootKey","LazyKey","testHookName","getLazyKey","_lazyKey","registerHook","once","debounce","action","unregisterHook","bubble","initImbedding","delete","read","storage","isConsistent","initAlias","cabinetIns","opt","includes","excludes","setFilter","_this","$filter","addFilter","initObserver","lazy","initWatch","$set","pathList","deep","shallow","curveSet","innerTarget","kname","warn","$get","pathName","addObserver","final","_dirty","localContext","toMatchRoot","lastIndexOf","useLoadCache","objectSupplement","autoNotifyTabs","sessionStorage","notifyTabs","randomToken","err","DOMException","code","addCheck","addZip"],"sourceRoot":""}