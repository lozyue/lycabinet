{"version":3,"file":"lycabinet.min.js","mappings":"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","sources":["webpack://Lycabinet/webpack/universalModuleDefinition","webpack://Lycabinet/webpack/bootstrap","webpack://Lycabinet/webpack/runtime/define property getters","webpack://Lycabinet/webpack/runtime/hasOwnProperty shorthand","webpack://Lycabinet/./src/utils/util.ts","webpack://Lycabinet/./src/utils/status.ts","webpack://Lycabinet/./src/extends/observer.ts","webpack://Lycabinet/./src/extends/check.ts","webpack://Lycabinet/./src/index.ts","webpack://Lycabinet/./src/core/store.ts","webpack://Lycabinet/./src/core/mixin.ts","webpack://Lycabinet/./src/core/event.ts","webpack://Lycabinet/./src/core/lycabinet.ts","webpack://Lycabinet/./src/core/lazy-support.ts","webpack://Lycabinet/./src/core/immbedding.ts","webpack://Lycabinet/./src/extends/alias.ts","webpack://Lycabinet/./src/extends/filter.ts","webpack://Lycabinet/./src/extends/zip.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Lycabinet\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lycabinet\"] = factory();\n\telse\n\t\troot[\"Lycabinet\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * Utils.js.\r\n * By lozyue.\r\n */\r\n\r\n/**\r\n * Get the item in an array with index. Support negative index.\r\n * @param  {...any} objs \r\n */\r\nexport const arrayIndex = function (arr, index) {\r\n  index = (arr.length + index) % arr.length;\r\n  if (arr[index] === undefined) {\r\n    throw new Error(`The index ${index} in array ${arr.toString()} is overflowed!`);\r\n  }\r\n  return arr[index];\r\n}\r\n\r\n/**\r\n * Get the target curve path value of the source Object.\r\n * The curve path is a sequenced array\r\n * @param source \r\n * @param objPathes \r\n */\r\nexport function curveGet(source: Object, objPathes: string[]){\r\n  let interim = source, item = '';\r\n  for(let index=0; index<objPathes.length; index++){\r\n    item = objPathes[index];\r\n    interim = interim && interim[item]\r\n    if(interim === void 0 ){\r\n      return void 0;\r\n    };\r\n  }\r\n  return interim;\r\n}\r\n\r\n/**\r\n * Set the consistent even curve path of the source Object \r\n * The curve path is a sequenced array // dot split strings.\r\n * @param source \r\n * @param objPathes \r\n * @param {unknown|Function} value The value assign for the curve object target. Support callback that if target value is a function you should set it in call back.\r\n * @returns { number|true } The number indicator the failed position of the conflict path.\r\n */\r\n export function curveSet(source: Object, objPathes: string[], value: ((target: Object, name: string)=>any)| unknown= null){\r\n  let interim = source, item = '';\r\n  // not the last one.\r\n  let index=0;\r\n  for(; index<objPathes.length-1; index++){\r\n    item = objPathes[index];\r\n    if(is_Defined(interim[item]) ){\r\n      if(is_Object(interim[item])){\r\n        interim = interim[item];\r\n      } else {\r\n        // Unexpected non-object value.\r\n        return index;\r\n      }\r\n    } else \r\n      interim = interim[item] = {};\r\n  };\r\n  // the last\r\n  item = objPathes[index];\r\n  // assign the value.\r\n  if(is_Function(value))\r\n    (value as Function)(interim, item);\r\n  else\r\n    interim[item] = value;\r\n  return true;\r\n}\r\n\r\n/**\r\n * Centralized management.\r\n * Add a listener to window storage event.\r\n * @param { Function } invoke Target invoke function or handle. \r\n * @param { Boolean } remove wheather the action is to remove added storage listener.\r\n */\r\nexport const addStoreListener = (()=>{\r\n  const invokeQueue: Function[]= [];\r\n  window.addEventListener(\"storage\", (eve)=>{\r\n    invokeQueue.forEach(func=>{\r\n      func(eve);\r\n    });\r\n  }, false); // default bubble.\r\n\r\n  return (invoke, remove = false)=>{\r\n    if(remove) \r\n      removeArrayItem(invokeQueue, invoke);\r\n    else invokeQueue.push(invoke);\r\n  }\r\n})();\r\n\r\n/**\r\n * Deep Object.assign source to target.\r\n * @param target\r\n * @param source\r\n */\r\nexport const deepAssign = function (...objs) {\r\n  let merged;\r\n  objs.reduce((target, source) => {\r\n    for (let item in source) {\r\n      if (!(target[item] && is_PlainObject(target[item])) ) {\r\n        target[item] = source[item];\r\n      } else {\r\n        deepAssign(target[item], source[item]);\r\n      }\r\n    }\r\n    merged = target;\r\n    return target;\r\n  }, objs[0]); // The third param is to set default value.\r\n  return merged;\r\n}\r\n\r\n/**\r\n * Just assign the item in supplement which not defined in target.\r\n * If you don't want to override the value of origin Object, supplement is the high performance choice.\r\n * Not deep mode.\r\n * @param {*} target \r\n * @param {*} supplement \r\n */\r\nexport function objectSupplement(target, supplement) {\r\n  let current = null;\r\n  for (let item in supplement) {\r\n    current = target[item];\r\n    if (is_Defined(current))\r\n      continue;\r\n    target[item] = supplement[item];\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * Just assign the item in supplement which not defined in target.\r\n * If you don't want to override the value of origin Object, supplement is the high performance choice.\r\n * Deep mode by iterate each inner Object.\r\n * @param {*} target \r\n * @param {*} supplement \r\n */\r\nexport function deepSupplement<R extends Object, T extends Object> (target: R|null, supplement: T) {\r\n  if(!target) return supplement;\r\n  let current: unknown = null;\r\n  for (let item in supplement) {\r\n    current = (target as unknown as T)[item];\r\n    if (is_Defined(current)) {\r\n      if (!is_PlainObject(current as Object)) continue;\r\n      deepSupplement(current as Object, supplement[item]); // The `current` is a reference which could be assigned.\r\n    }\r\n    else\r\n      // current = supplement[item];\r\n      (target as unknown as T)[item] = supplement[item];\r\n  }\r\n  return target as (R & T);\r\n}\r\n\r\n\r\n/**\r\n * Simple deepClone with optional Function clone\r\n */\r\nexport function deepClone(val, substituteObj = Object.create(null), cloneFunc = true) {\r\n  if (is_PlainObject(val)) {\r\n    var res = substituteObj;\r\n    for (var key in val) {\r\n      res[key] = deepClone(val[key]);\r\n    }\r\n    return res;\r\n  } else if (is_Array(val)) {\r\n    return val.slice()\r\n  } else if (cloneFunc && is_Function(val)) {\r\n    return Object.create(val.prototype).constructor;\r\n  } else {\r\n    return val;\r\n  }\r\n}\r\n\r\nexport function iterateObject(source: Object, iterate: Function){\r\n  iterate(source);\r\n  for(let item in source){\r\n    if( is_PlainObject(source[item]) )\r\n      iterate(source, iterate);\r\n  }\r\n}\r\n\r\nexport const is_Defined = (v: unknown):Boolean => (v !== undefined && v !== null);\r\nexport const is_Object = (obj: unknown):Boolean => (obj instanceof Object || typeof obj === \"object\");\r\nexport const is_PlainObject = (obj: unknown):Boolean => (Object.prototype.toString.call(obj) === '[object Object]');\r\nexport const is_Array = (obj: unknown):Boolean => (Array.isArray && Array.isArray(obj) || obj instanceof Array || (typeof obj === 'object') && Object.prototype.toString.call(obj).slice(-6,-1)=== 'Array' );\r\nexport const is_String = (str: Object):Boolean => ((typeof str === 'string') && str.constructor == String);\r\nexport const is_Function = (obj: unknown):Boolean => (obj instanceof Function);\r\n\r\nexport const is_Empty = (val: unknown)=>{\r\n  if(!val) return true;\r\n  if(is_Array(val)){\r\n    return !(val as Array<unknown>).length;\r\n  }else{\r\n    return !Object.keys((val) as Object).length;\r\n  }\r\n}\r\n\r\n/*\r\n * Delete the Item in an Array, returning the new Array.\r\n */\r\nexport var removeArrayItem = (arr, item) => {\r\n  if (arr.length) {\r\n    let index = arr.indexOf(item);\r\n    if (index > -1) {\r\n      return arr.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Provide with a processor accept a list of stuff or single stuff\r\n * Give it the action to its inner iterator.\r\n * The original Stuff can not be an Array!\r\n */\r\nexport function arbitraryFree(input, func) {\r\n  if (input.forEach) {\r\n    return input.forEach(func);\r\n  } else {\r\n    return func(input, 0);\r\n  }\r\n}\r\n\r\nexport function storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = '__storage_test__';\r\n    storage.setItem(x, x);\r\n    storage.removeArrayItem(x);\r\n    return true;\r\n  }\r\n  catch (e) {\r\n    return e instanceof DOMException && (\r\n      // everything except Firefox\r\n      e.code === 22 ||\r\n      // Firefox\r\n      e.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      e.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\nexport const DEBUG = process.env.NODE_ENV !== 'production';\r\n\r\nexport const EnvAssociate = {\r\n  Light: false, // light mode.\r\n};\r\n","/**\r\n * Status for Mutex\r\n */\r\n\r\nconst CREATED = 'created';\r\nconst MOUNTED = 'mounted';\r\nconst IDLE = 'idle';\r\nconst LOADING = 'loading';\r\nconst SAVING = 'saving';\r\nconst CLEARING = 'clearing';\r\n\r\n\r\nexport {\r\n  CREATED,\r\n  IDLE,\r\n  LOADING,\r\n  SAVING,\r\n  CLEARING,\r\n  MOUNTED,\r\n};\r\n","/**\r\n * Observer Plugin for Lycabinet\r\n * Adding an mini observer for storage variable listening.\r\n */\r\n\r\nimport { \r\n  curveGet, curveSet, \r\n  removeArrayItem, deepSupplement, is_PlainObject,  \r\n  DEBUG,\r\n  is_Function\r\n} from \"../utils/util\";\r\n\r\n// change methods.\r\nlet onSetted: Function| null = null;\r\n\r\n/**\r\n * Targets\r\n * @param Lycabinet \r\n */\r\n\r\nexport function addObserver(Lycabinet){\r\n  Lycabinet.prototype.initObserver = function(options: any = {}){\r\n    // Override the default options\r\n    Object.assign(options, {\r\n      deepMerge: true,\r\n    });\r\n    // configurate options\r\n    deepSupplement(options, {\r\n      lazy: true,\r\n      initWatch: true, // whether transform the origin property in Observer.\r\n      deepWatch: true, // whether consistently watch the Object type value setted in initial data.\r\n      shallowWatch: false, // whether just watch the surface of the Object.\r\n    });\r\n\r\n    // init proxy Interceptor.\r\n    onSetted = ()=>{\r\n      // this._trigger(\"setItem\");\r\n      options.lazy? this.lazySave(): this.save();\r\n    };\r\n    \r\n    if(!options.initWatch) return false;\r\n    \r\n    this.__storage = deepConvert(this.__storage, options.deepWatch, options.shallowWatch);\r\n    this.setStore(this.__storage);\r\n  };\r\n\r\n  // Convert the path target to be reactive. Check redundant Prevent by default.\r\n  Lycabinet.$set = function(target, pathList: string[], deep=false, shallow =true){\r\n\r\n    // CurveSet the target value.\r\n    return curveSet(target, pathList, (innerTarget, kname)=>{\r\n      // If target is not existed, set to plain Object; Reset the value if it has been converted.\r\n      if(!is_PlainObject(innerTarget[kname])){\r\n        innerTarget[kname] = {};\r\n      }\r\n      if(DEBUG && innerTarget[kname][\"$addListener\"]){\r\n        console.warn(\"[Lycabinet]: The target of value could have been converted before!\", innerTarget[kname]);\r\n      }\r\n      innerTarget[kname] = convert(innerTarget[kname], deep, shallow);\r\n    });\r\n  };\r\n\r\n  Lycabinet.$get = function(target, pathList: string[]){\r\n    return curveGet(target, pathList);\r\n  }\r\n\r\n  /**\r\n   * Makes the target to be reactive\r\n   * If the target path is not defined,\r\n   *  it will be assigned as an Object.\r\n   * Warning: If the value in path end is assigned with non-PlainObject type value previously,\r\n   *  the value will be override by `{}`\r\n   */ \r\n  Lycabinet.prototype.$set = function(pathName: string, deep=false, shallow =true){\r\n    return Lycabinet.$set(this.__storage, pathName.split('.'), deep, shallow);\r\n  }\r\n  // Makes the target to be reactive\r\n  Lycabinet.prototype.$get = function(pathName: string){\r\n    return curveGet(this.__storage, pathName.split('.') );\r\n  }\r\n};\r\n\r\n/**\r\n * Proxy Modules.\r\n * @author lozyue\r\n * @time 2021\r\n */\r\n\r\n// Convert the Object and its descendant Object from bottom to top.\r\nfunction deepConvert(source: Object, deepWatch=true, shallowWatch=false){\r\n  const plainObjQueue: Array<any> = [];\r\n  // reverse for convert\r\n  const iterate = (current)=>{\r\n    plainObjQueue.unshift(current);\r\n    for(let item in current){\r\n      if(is_PlainObject(current[item])){\r\n        iterate(current[item]);\r\n      }\r\n    }\r\n  };\r\n  iterate(source);\r\n  plainObjQueue.forEach((item, index, arr)=>{\r\n    for(let ref in item){\r\n      // convert by reference.\r\n      if(is_PlainObject(item[ref]) )\r\n        arr[index][ref] = convert(item[ref], deepWatch, shallowWatch);\r\n    }\r\n  });\r\n  return convert(source, deepWatch, shallowWatch);\r\n}\r\n\r\n/**\r\n * Convert the normal data to be reactive.\r\n *  todo: add the Array type support.\r\n * @param source \r\n * @param deepWatch \r\n * @param shallowWatch \r\n */\r\ntype OnValueChange = (prop:symbol|string, newValue, oldValue)=>unknown;\r\ntype InternalValueType = {\r\n  _parent: null | unknown,\r\n  $addListener: (t:OnValueChange, onProp: string)=>unknown,\r\n  $removeListener: (h:OnValueChange, onProp: string)=>unknown,\r\n  // trigger: Record<string|symbol, OnValueChange[]>,\r\n  triggers: OnValueChange[],\r\n  value: Object,\r\n};\r\nfunction convert(source: Object, deepWatch = false, shallowWatch = true){\r\n  let internalValue: InternalValueType = Object.create(null);\r\n  // to do... Add trigger bubbule to its parents.\r\n  internalValue._parent = null;\r\n  internalValue.triggers = [];\r\n  // save the values\r\n  internalValue.value = source;\r\n  // Config it!\r\n  const propConfig = {\r\n    enumerable: false, // which is not enumerable in source either.\r\n    configurable: true,\r\n    writable: false,\r\n  };\r\n  const $addListener = (onchange: OnValueChange)=>{    \r\n    return internalValue.triggers.push(onchange);\r\n  };\r\n  const $removeListener = (handle: Function)=>{\r\n    return removeArrayItem(internalValue.triggers, handle);\r\n  };\r\n  // Origin Accessable definition\r\n  const AccessQueue = [\"$addListener\", \"$removeListener\"];\r\n  AccessQueue.forEach((hook, index)=>{\r\n    internalValue[hook] = {value: null} as {value: unknown, trigger: Function[]};\r\n    Object.defineProperty(internalValue, hook, {\r\n      value: !index? $addListener: $removeListener,\r\n      ...propConfig\r\n    });\r\n  });\r\n\r\n  const refValue = internalValue.value; // For reader accel.\r\n  const HandleRules = {\r\n    get(target, prop, receiver) {\r\n      DEBUG && console.info(\"Getted\", target, prop, receiver, internalValue);\r\n      if(AccessQueue.indexOf(prop) > -1){\r\n        return internalValue[prop];\r\n      }\r\n      return refValue[prop];\r\n    },\r\n    set(target, prop, newValue, receiver) {\r\n      DEBUG && console.info(\"Setted\", target, prop, receiver, internalValue);\r\n      const rawValue = refValue[prop];\r\n      // consistent deepWatch observer. \r\n      if(deepWatch){\r\n        if(is_PlainObject(newValue)){\r\n          if(shallowWatch){\r\n            refValue[prop] = convert(newValue, false, true);\r\n          }else{\r\n            refValue[prop] = deepConvert(newValue, deepWatch, false);\r\n          }\r\n        }\r\n      }else\r\n        refValue[prop] = newValue;\r\n\r\n      if(newValue !== rawValue){\r\n        let triggers = internalValue.triggers;\r\n        for(let index=0; index< triggers.length; index++){\r\n          // Check it!\r\n          if(!is_Function(triggers[index]) ){\r\n            throw new Error(`The get proxy handler listener added in target is Not a Function which type is ${typeof triggers[index]}`);\r\n          }\r\n          triggers[index](prop, newValue, rawValue);\r\n        }\r\n        if(onSetted!==null) onSetted();\r\n      }\r\n      return true;\r\n    },\r\n  };\r\n  return new Proxy(source, HandleRules);\r\n}\r\n","/**\r\n * Argument the robustness of the JSON data process.\r\n * And preserve the atomicity when there is multi-tabs opened by user.\r\n * Like delete the Item in Storage if it is vacant.\r\n */\r\n\r\nimport { addStoreListener, arrayIndex, DEBUG, objectSupplement } from \"../utils/util\";\r\n\r\nconst ParticalToken = 'cabinetSyncTabs';\r\n\r\nexport function addCheck(Lycabinet){\r\n  /**\r\n   * JSON analysis argumented.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    cabinetIns._on(\"localLoaded\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // add pre-check for JSON Parse.\r\n      if(!final) final = '{}';\r\n      return final;\r\n    });\r\n    cabinetIns._on(\"localSaved\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      return final;\r\n    });\r\n  });\r\n\r\n  /**\r\n   * Add a dirty flag for judging.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    // This is not so precious. Because user can manually set the __storage Object whose action is not recorded.\r\n    cabinetIns._on(\"setItem\", function(){\r\n      this._dirty = true;\r\n    });\r\n    cabinetIns._on(\"saved\", function(){\r\n      this._dirty = false;\r\n    })\r\n  });\r\n\r\n  /**\r\n   * Listening the storage event from other tabs(pages)\r\n   * by\r\n   */\r\n  var localContext: {cabinetIns?: Record<string, unknown>} = {};\r\n  addStoreListener( (eve)=>{\r\n    if(!localContext.cabinetIns){\r\n      DEBUG && console.warn(\"cabinetIns is not mouted!\");\r\n      return true;\r\n    }\r\n\r\n    const { cabinetIns: cabinetIns } = localContext;\r\n    \r\n    // Do not reload if current cabinet has shared cabinet.\r\n    if(cabinetIns.useLoadCache) return true;\r\n\r\n    // Reload. By default using deeepMerge mode.\r\n    if([cabinetIns.__root, ParticalToken].indexOf(eve.key) > -1){\r\n      DEBUG && console.log(\"[Lycabinet]: Synchronizing data from other tabs...\");\r\n      // merge data using default options.\r\n      (cabinetIns.load as Function)(true, false, true); // Considering of the latency on cloud, we only synchronize the data on local.\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Add auto tab synchronize listener options.\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    // save the localContext\r\n    localContext.cabinetIns = cabinetIns;\r\n    cabinetIns._on(\"loadFromCache\", function(){\r\n      this.useLoadCache = true; \r\n    });\r\n\r\n    // add options for custom database which is not localStorage.\r\n    objectSupplement(cabinetIns.options, {\r\n      autoNotifyTabs: false,\r\n    });\r\n\r\n    cabinetIns._on(\"saved\", function(onCloud, concurrent){\r\n      if(this.options.autoNotifyTabs){\r\n        const IgnoreLocal = onCloud && !concurrent;\r\n        if(IgnoreLocal){\r\n          return false;\r\n        }\r\n\r\n        this.notifyTabs();\r\n      }\r\n    });\r\n  });\r\n\r\n  /**\r\n   * If the database in configuration is not `LocalStorage` (like Env is `sessionStorage`)\r\n   * You should call this method to notify the other pages or set autoNotifyTabs to true.\r\n   */\r\n  Lycabinet.prototype.notifyTabs = function(){\r\n    const randomToken = new Date().getTime();\r\n    // this will give other pages a notifycation.\r\n    window.localStorage.setItem(ParticalToken, randomToken+'');\r\n  }\r\n}\r\n","/**\r\n * Lycabinet.js\r\n * Full build.\r\n */\r\n\r\nimport { InitStore } from './core/store';\r\nimport { InitEventSystem } from './core/event';\r\nimport { InitCore } from './core/lycabinet';\r\nimport { InitLazyDepartment } from './core/lazy-support';\r\nimport { InitMixin } from \"./core/mixin\";\r\n\r\nimport { initImbedding } from './core/immbedding';\r\nimport { initAlias } from './extends/alias';\r\nimport { addFilter } from './extends/filter';\r\nimport { addObserver } from './extends/observer';\r\n\r\nimport { addCheck } from './extends/check';\r\nimport { addZip } from './extends/zip';\r\n\r\n\r\nfunction Lycabinet(...options){\r\n  if (process.env.NODE_ENV !== 'production' && !(this instanceof Lycabinet) ) {\r\n    (global.warn || console.warn)('Lycabinet is a constructor and should be called with the `new` keyword');\r\n    return null;\r\n  }\r\n  this.__init.apply(this, options);\r\n}\r\n\r\nInitStore(Lycabinet);\r\nInitMixin(Lycabinet);\r\nInitEventSystem(Lycabinet);\r\nInitCore(Lycabinet);\r\nInitLazyDepartment(Lycabinet);\r\n\r\ninitImbedding(Lycabinet);\r\ninitAlias(Lycabinet);\r\n\r\naddFilter(Lycabinet);\r\naddObserver(Lycabinet);\r\n\r\naddCheck(Lycabinet);\r\naddZip(Lycabinet);\r\n\r\nexport default Lycabinet;\r\n","/**\r\n * Given a private variable for every set storage.\r\n * Basement.\r\n */\r\n\r\nimport { DEBUG, is_Defined, is_PlainObject } from \"../utils/util\";\r\n\r\nexport function InitStore(Lycabinet){\r\n  const __cabinet = Object.create(null);\r\n\r\n  Lycabinet.prototype.hasStore = function(){\r\n    return is_Defined(__cabinet[this.__root]) && is_PlainObject(__cabinet[this.__root]);\r\n  }\r\n\r\n  /**\r\n   * Get the cabinet access.\r\n   * @returns {Plain Object} __cabinet ; The reference of the storage Object property.\r\n   * Each instance is shared by the root key.\r\n   */\r\n  Lycabinet.prototype.getStore = function(){\r\n    return __cabinet[this.__root];\r\n  }\r\n  \r\n  /**\r\n   * To initialize the __cabinet storage. \r\n   * @param {Plain Object} cabinet \r\n   */\r\n  Lycabinet.prototype.setStore = function(cabinet){\r\n    __cabinet[this.__root] = cabinet;\r\n  }\r\n\r\n  /**\r\n   * To clear the inner cache of cabinet.\r\n   */\r\n  Lycabinet.prototype.removeStore = function(){\r\n    __cabinet[this.__root] = void 0;\r\n  }\r\n\r\n  Lycabinet.$removeStore = function(root: string){\r\n    __cabinet[root] = void 0;\r\n  }\r\n\r\n  DEBUG && (Lycabinet.$getStore = function(root: string){\r\n    return __cabinet[root];\r\n  });\r\n}\r\n","/**\r\n * Lycabinet Mixin.\r\n */\r\nexport function InitMixin(Lycabinet){\r\n  Lycabinet.prototype._mixins = []; // Shared by instances.\r\n\r\n  Lycabinet.mixin = function (mixinFunc) {\r\n    Lycabinet.prototype._mixins.push(mixinFunc);\r\n    return this;\r\n  };\r\n\r\n  Lycabinet.prototype.__install = function(...options){\r\n    options.unshift(this);\r\n    Lycabinet.prototype._mixins.forEach(func => {\r\n      func.apply(func, options);\r\n    });\r\n  };\r\n}","/**\r\n * Event system provided.\r\n * Have weak hook fundamental at same time.\r\n */\r\nimport { removeArrayItem, is_Function, DEBUG, arrayIndex, EnvAssociate } from '../utils/util';\r\n\r\nexport function InitEventSystem(Lycabinet){\r\n  // let subscriptions = Object.create(null);\r\n  \r\n  // Private way of Function Clone with more memory cost(About three than normal prototype mode).\r\n  let preOwnner = null;\r\n  Lycabinet.mixin(function(self){\r\n    let subscriptions: Object = null as unknown as Object; \r\n\r\n    if(self!==preOwnner){\r\n      subscriptions = Object.create(null);\r\n    }\r\n    preOwnner = self;\r\n\r\n    self._on = function(name: CabinetEventType, func){\r\n      if(DEBUG &&!is_Function(func)){\r\n        throw new Error(\"[Laction]:The second parameter of _on method must be a callback function!\");\r\n      }\r\n      // console.log(this, , subscriptions)\r\n      subscriptions||(subscriptions = Object.create(null))\r\n      const actions = subscriptions[name] || (subscriptions[name] = []);\r\n      actions.push(func);\r\n    };\r\n    \r\n    self._off = function(name: CabinetEventType, handle){\r\n      const actions = subscriptions[name] || (subscriptions[name] = []);\r\n      removeArrayItem(actions, handle);\r\n    };\r\n  \r\n    self._trigger = function(name: CabinetEventType, ...params){\r\n      const actions = subscriptions[name] || (subscriptions[name] = []);\r\n      const results: Array<unknown>= [];\r\n      params.push(results);\r\n      for(let index=0; index< actions.length; index++){\r\n        let temp = actions[index].apply(this, params);\r\n        temp && results.push( temp );\r\n      }\r\n      // add trigger mark\r\n      if(!actions.counter) actions.counter=0;\r\n      actions.counter++;\r\n      // if no hook this will returns last params. We can use last params to set default value.\r\n      return results.length? arrayIndex(results, -1): params.length? arrayIndex(params, -1): null;\r\n    };\r\n  \r\n    self._once = function(name: CabinetEventType, func, instantOnTriggered: number|boolean = 0){\r\n      const subs = subscriptions[name] || (subscriptions[name] = []);\r\n      if(subs.counter && ~~instantOnTriggered <= subs.counter ){\r\n        func(subs.counter);\r\n        return ;\r\n      }\r\n      var handleFunc = function(...params){\r\n        func.apply(this, params);\r\n        this._off(name, handleFunc);\r\n      }; \r\n      this._on(name, handleFunc);\r\n    };\r\n  \r\n    // for Debug\r\n    // DEBUG && \r\n    !EnvAssociate.Light && (Lycabinet.prototype._setlog = function(){\r\n      const presets: CabinetEventType[] = [\r\n        'created','mounted', \r\n        'beforeLoad', 'beforeLocalLoad', 'localLoaded', 'loaded', \r\n        'loadFromCache',\r\n        'setItem', 'writeLock', 'writeBackflow', \r\n        'getItem', 'removeItem', \r\n        'lazySave', \r\n        'beforeSave', 'beforeLocalSave', 'localSaved', 'saved', 'busy',\r\n        'beforeClear', 'beforeLocalClear', 'localCleared', 'cleared',\r\n        'error',\r\n      ];\r\n  \r\n      new Set(Object.keys(subscriptions).concat(presets) ).forEach(item=>{\r\n        let testHandle = subscriptions[item] && subscriptions[item]._logHandle;\r\n        if(testHandle){\r\n          this._off(item, testHandle)\r\n        }\r\n        // give a handle\r\n        const logHandle = ()=>{\r\n          console.log(`[Lycabinet]: Triggered the event: '${item}'`);\r\n        };\r\n        this._on(item, logHandle);\r\n        // add handle\r\n        subscriptions[item]._logHandle = logHandle;\r\n      });\r\n    });\r\n    \r\n  });\r\n\r\n  // Private way of WeakMap with confined compatibility.\r\n  // let subscriptions = new WeakMap();\r\n\r\n  // Lycabinet.mixin(function(self){\r\n    // subscriptions.set(self, Object.create(null));\r\n  // });\r\n\r\n  // Lycabinet.prototype._on = function(name: CabinetEventType, func){\r\n  //   if(DEBUG &&!is_Function(func)){\r\n  //     throw new Error(\"[Laction]:The second parameter of _on method must be a callback function!\");\r\n  //   }\r\n  //   subscriptions[this] || (subscriptions[this] = Object.create(null) );\r\n  //   const actions = subscriptions[this][name] || (subscriptions[this][name] = []);\r\n  //   actions.push(func);\r\n  // };\r\n  \r\n  // Lycabinet.prototype._off = function(name: CabinetEventType, handle){\r\n  //   const actions = subscriptions[this][name] || (subscriptions[this][name] = []);\r\n  //   removeArrayItem(actions, handle);\r\n  // };\r\n\r\n  // Lycabinet.prototype._trigger = function(name: CabinetEventType, ...params){\r\n  //   const actions = subscriptions[this][name] || (subscriptions[this][name] = []);\r\n  //   const results: Array<unknown>= [];\r\n  //   params.push(results);\r\n  //   for(let index=0; index< actions.length; index++){\r\n  //     let temp = actions[index].apply(this, params);\r\n  //     temp && results.push( temp );\r\n  //   }\r\n  //   // add trigger mark\r\n  //   if(!actions.counter) actions.counter=0;\r\n  //   actions.counter++;\r\n  //   // if no hook this will returns last params. We can use last params to set default value.\r\n  //   return results.length? arrayIndex(results, -1): params.length? arrayIndex(params, -1): null;\r\n  // };\r\n\r\n  // Lycabinet.prototype._once = function(name: CabinetEventType, func, instantOnTriggered: number|boolean = 0){\r\n  //   const subs = subscriptions[this][name] || (subscriptions[this][name] = []);\r\n  //   if(subs.counter && ~~instantOnTriggered <= subs.counter ){\r\n  //     func(subs.counter);\r\n  //     return ;\r\n  //   }\r\n  //   var handleFunc = function(...params){\r\n  //     func.apply(this, params);\r\n  //     this._off(name, handleFunc);\r\n  //   }; \r\n  //   this._on(name, handleFunc);\r\n  // };\r\n\r\n  // // for Debug\r\n  // // DEBUG && \r\n  // !EnvAssociate.Light && (Lycabinet.prototype._setlog = function(){\r\n  //   const presets: CabinetEventType[] = [\r\n  //     'created','mounted', \r\n  //     'beforeLoad', 'beforeLocalLoad', 'localLoaded', 'loaded', \r\n  //     'loadFromCache',\r\n  //     'setItem', 'writeLock', 'writeBackflow', \r\n  //     'getItem', 'removeItem', \r\n  //     'lazySave', \r\n  //     'beforeSave', 'beforeLocalSave', 'localSaved', 'saved', 'busy',\r\n  //     'beforeClear', 'beforeLocalClear', 'localCleared', 'cleared',\r\n  //     'error',\r\n  //   ];\r\n\r\n  //   new Set(Object.keys(subscriptions[this]).concat(presets) ).forEach(item=>{\r\n  //     let testHandle = subscriptions[this][item] && subscriptions[this][item]._logHandle;\r\n  //     if(testHandle){\r\n  //       this._off(item, testHandle)\r\n  //     }\r\n  //     // give a handle\r\n  //     const logHandle = ()=>{\r\n  //       console.log(`[Lycabinet]: Triggered the event: '${item}'`);\r\n  //     };\r\n  //     this._on(item, logHandle);\r\n  //     // add handle\r\n  //     subscriptions[this][item]._logHandle = logHandle;\r\n  //   });\r\n  // });\r\n}\r\n\r\nexport type CabinetEventType =\r\n'created'|'mounted'| \r\n'beforeLoad'| 'beforeLocalLoad'| 'localLoaded'| 'loaded'| \r\n'loadFromCache'|\r\n'setItem'| 'writeLock'| 'writeBackflow'| \r\n'getItem'| 'removeItem'| \r\n'lazySave'| \r\n'beforeSave'| 'beforeLocalSave'| 'localSaved'| 'saved'| 'busy'|\r\n'beforeClear'| 'beforeLocalClear'| 'localCleared'| 'cleared'|\r\n'error';\r\n","/**\r\n * lycabinet.js\r\n * A high performance JSON Object storage helper.\r\n * 高性能的 JSON对象 小型数据存储辅助类\r\n * @createdTime 2021-03-28\r\n */\r\n\r\nimport * as _STATUS from '@/utils/status';\r\nimport { deepAssign, arbitraryFree, is_Defined, is_PlainObject, DEBUG, is_Empty, arrayIndex, is_String } from '@/utils/util';\r\n\r\ntype AccessOptions = Partial<{\r\n  onCloud: boolean|null, \r\n  concurrent: boolean|null,\r\n  deepMerge: boolean,\r\n  onceDone: (isSuccess: boolean, isCloud: boolean)=>unknown,\r\n}>\r\n\r\n/**\r\n * Init core.\r\n * @param {*} root \r\n * @param {Object} options => {\r\n *   initStorage => Object, // 初始化值\r\n *   outerSave => Function, // 自定义保存方法，接收一个参数，为存储的数据对象\r\n *   outerLoad => Function, // 自定义装载方法，返回一个对象，将Assign给数据存储对象\r\n * }\r\n * 注意：以上网络请求的外部通信方法需要返回一个Promise对象.\r\n */\r\nexport function InitCore(Lycabinet){\r\n  \r\n  /**\r\n   * The configuration initialization.\r\n   * @param { String } root \r\n   * @param { Object } options \r\n   */\r\n  Lycabinet.prototype.__init = function(root: string, options: Record<string, unknown> = {} ){\r\n\r\n    if(options.initStorage && !is_PlainObject(options.initStorage) ){\r\n      throw new Error(\"[Lycabinet]:The type of the provided option `initStorage` must be an Object!\");\r\n    }\r\n    if( !is_String(root)) \r\n      throw new Error(`[Lycabinet]: The param \"root\" should be an string, than type ${typeof root}!`);\r\n    this.__root = (root || 'lycabinet') + ''; // The key in storage. Must be a string.\r\n\r\n    // default options.\r\n    const defaultOptions = {\r\n      root: this.__root, // copy to options.\r\n      autoload: true, // 实例化后 自动调用._init 方法实例化. (并且此时init中会自动调用 load 方法. 默认使用 Object.assign 浅合并，可手动调用传参深度合并.)\r\n      lazyPeriod : ~~(options.lazyPeriod as number) || 5000, // set the lazy period of lazySave methods.\r\n      saveMutex: true, // 存储互斥 仅在 idle 状态可进行保存操作\r\n      autoLazy: true, // Call lazy save automaticly when the save is busy. \r\n      logEvent: false, // use this to log event globally from scratch\r\n      useSharedCabinet: true, // use global shared cabinet\r\n      shareCabinet: true, // share the cabinet for global\r\n      // Weather use deepAssign to contact when load the outer data.\r\n      // (If the observer is required, it is recommend you to always keep this on to prevent reference loss.)\r\n      deepMerge: false, \r\n      // local interfaces of storage\r\n      localInterface: {\r\n        database: window.localStorage,\r\n        getItem: \"getItem\", // method name, String\r\n        setItem: \"setItem\", // method name, String\r\n        removeItem: \"removeItem\", // method name, String\r\n      }, \r\n      \r\n      // Decide weather enable local cabinet when cloud is setted. Auto judge.\r\n      concurrence: !(options.outerLoad && options.outerSave && options.outerClear),\r\n      // cloud loads example options. The inner pointer `this` is pointed to `cabinet.options` if not set by arrow function.\r\n      outerLoad: ([root, cabinet], success, error)=>{\r\n        // data = load(root)\r\n        let data = {};\r\n        success(data);\r\n      },\r\n      outerSave: ([root, cabinet], success, error)=>{\r\n        // save(root, cabinet)\r\n        success();\r\n      },\r\n      outerClear: ([root, cabinet], success, error)=>{\r\n        // clear(root)\r\n        success();\r\n      },\r\n    };\r\n    this.options = deepAssign(defaultOptions, options);\r\n    // Make the privilege.\r\n    this.__install(this.options);\r\n    \r\n    // root event console log\r\n    if(this.options.logEvent) this._setlog();\r\n\r\n    this.status = _STATUS.CREATED; // status token\r\n    this._trigger(\"created\");\r\n    // From now you can have data access.\r\n    if(this.options.autoload) this._init(options.initStorage || Object.create(null) );\r\n  };\r\n\r\n  /**\r\n   * Initialize the cabinet storage before 'CURD' manipulation.\r\n   * If autoload is not setted, you should call this manually.\r\n   * Todo: add reduplicate._init check and warning.\r\n   */\r\n  Lycabinet.prototype._init = function(cabinet = Object.create(null)){\r\n    // write protection backflow\r\n    const writeBackflow = function(){\r\n      if(is_Empty(this.__tempStorage)) return;\r\n      // backflow\r\n      deepAssign(this.__storage, this.__tempStorage);\r\n      this.__tempStorage = Object.create(null);\r\n      this._trigger(\"writeBackflow\");\r\n    }\r\n    this._on(\"loaded\", writeBackflow);\r\n    this._on(\"cleared\", writeBackflow);\r\n\r\n    // override the options by the already existed cabinet.\r\n    // this is global shared with all the instance in the page.\r\n    if(this.options.useSharedCabinet && this.hasStore()){\r\n      // this.__storage = cabinet = this.getStore(); // That's useless cause cabinet is just a Object reference.\r\n      this.__storage = this.getStore();\r\n      // Sync status.\r\n      Object.assign(cabinet, this.__storage);\r\n      this._trigger(\"loadFromCache\");\r\n    }\r\n    else{\r\n      this.__storage = this.__storage || cabinet;\r\n      if(this.options.shareCabinet)\r\n        this.setStore(this.__storage);\r\n      // Auto load. Only when the cabinet in using is private.\r\n      if(this.options.autoload) this.load(false); // default using shallow assign.\r\n      else this.status = _STATUS.IDLE; // Amend the status error.\r\n    }\r\n\r\n    this.status = _STATUS.MOUNTED;\r\n    this._trigger(\"mounted\"); // Interior cabinet access attainable.\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Test the cabinet is busy or not.\r\n   */\r\n  Lycabinet.prototype.isVacant = function(){\r\n    return this.status===_STATUS.IDLE;\r\n  }\r\n\r\n  /**\r\n   * Set an item with key.\r\n   * Added write protection on stage of loading and clearing.\r\n   * @param {*} key \r\n   * @param {*} value \r\n   */\r\n  Lycabinet.prototype.set = function(key, value){\r\n    const MutexStatus = [_STATUS.LOADING, _STATUS.CLEARING];\r\n    // add write protection.    \r\n    if(MutexStatus.indexOf(this.status) > -1){\r\n      this._trigger(\"writeLock\");\r\n      this.__tempStorage = this.__tempStorage || (this.__tempStorage = Object.create(null));\r\n      this.__tempStorage[key] = value;\r\n      return this;\r\n    }\r\n\r\n    this.__storage[key] = value;\r\n    this._trigger('setItem', key, value);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Get the value of an item by key.\r\n   * Please don't read from loading and clearing stream.\r\n   * @param {*} key \r\n   */\r\n  Lycabinet.prototype.get = function(key){\r\n    let backValue = this.__storage[key];\r\n    this._trigger('getItem', key, backValue);\r\n    return backValue;\r\n  }\r\n\r\n  /**\r\n   * Delete an item by key.\r\n   */ \r\n  Lycabinet.prototype.remove = function(keys){\r\n    let removed = false;\r\n    arbitraryFree(keys, (k)=>{\r\n      // Though it isn't disappeared immediately, But after JSON parse and stringify manipulations this will be cleared.\r\n      if(this.__storage.hasOwnProperty(k)){\r\n        this.set(k, void 0);\r\n        removed = true\r\n      }\r\n    }); \r\n    this._trigger('removeItem', keys, removed);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Delete the cabinet directly.\r\n   * But the data may still exist in memory(RAM).  \r\n   * @param {Boolean} onCloud \r\n   * @param {Boolean} concurrent Override the default options in `this.options.concurrence`\r\n   */\r\n  Lycabinet.prototype.clear = function(option: AccessOptions = {}){\r\n    // merge default options.\r\n    const concurrent = is_Defined(option.concurrent)? option.concurrent: this.options.concurrence;\r\n    const onCloud = (is_Defined(option.onCloud)? option.onCloud: !!this.options.outerClear) as boolean;\r\n    this.status = _STATUS.LOADING;\r\n    this._trigger('beforeClear');\r\n    \r\n    // Local clear\r\n    let localClear = ()=>{\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalClear', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"[Lycabinet]: The local clear action is ignored by options: concurrence=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      localApi.database[localApi.removeItem]( this.__root );\r\n      // trigger hook event after call local database to clear the Item.\r\n      this._trigger('localCleared', this.__root); // Give the param of the remove target. \r\n    }\r\n\r\n    // Cloud clear\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = ()=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('cleared', onCloud, concurrent);\r\n      // Callback\r\n      option.onceDone && option.onceDone(true, onCloud);\r\n    }\r\n    const onError = (msg, reason='')=>{\r\n      this._trigger(\"error\", \"clear\", \"cloudClearings\", reason);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('cleared', onCloud, concurrent);\r\n      console.error(`[Lycabinet]: Failed to Clear the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n      // Callback\r\n      option.onceDone && option.onceDone(false, onCloud);\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localClear();\r\n      if(onCloud) \r\n        this.options.outerClear(pack, onSuccess, onError);\r\n      else {\r\n        this.status = _STATUS.IDLE;\r\n        this._trigger('cleared', onCloud, concurrent);\r\n        // Callback\r\n        option.onceDone && option.onceDone(true, onCloud);\r\n      }\r\n    } catch(e){\r\n      onError(e, \"unknown\");\r\n      // Callback\r\n      option.onceDone && option.onceDone(false, onCloud);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Load the cabinet on initialization.\r\n   * The local load is faster than cloud.\r\n   * @param { Boolean } onCloud \r\n   * @param { Boolean } concurrent Override the default options in `this.options.concurrence`\r\n   * @param { Boolean } deepMerge Using deepAssign instead of Object.assign to merge the data from local and cloud.\r\n   */\r\n  Lycabinet.prototype.load = function(option: AccessOptions = {}){\r\n    // merge default options.\r\n    const concurrent = is_Defined(option.concurrent)? option.concurrent: this.options.concurrence;\r\n    const onCloud = (is_Defined(option.onCloud)? option.onCloud: !!this.options.outerLoad) as boolean;\r\n    const deepMerge = is_Defined(option.deepMerge)? ~~(option.deepMerge as Boolean): this.options.deepMerge;\r\n    this.status = _STATUS.LOADING;\r\n    this._trigger(\"beforeLoad\");\r\n\r\n    // Local load \r\n    let localLoad = ()=>{\r\n      let localTemp = null;\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalLoad', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"[Lycabinet]: The local load action is ignored by options: concurrence=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      \r\n      let initialData = localApi.database[localApi.getItem]( this.__root );\r\n      // trigger hook event after call local database to parse the value. Should have a return value in event. (data)=>{ return handle(data); }\r\n      initialData = this._trigger('localLoaded', initialData); // Only take effect on the last element.\r\n\r\n      localTemp = JSON.parse( initialData );\r\n      if(deepMerge)\r\n        deepAssign(this.__storage, localTemp);\r\n      else\r\n        Object.assign(this.__storage, localTemp);\r\n    };\r\n\r\n    // Cloud load\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = (data)=>{\r\n      if(!is_Defined(data) || !is_PlainObject(data))\r\n        throw new Error(`[Lycabinet]: Load cabinet with empty 'data' which type is ${typeof data}`);\r\n        \r\n      if(deepMerge)\r\n        deepAssign(this.__storage, data);\r\n      else \r\n      // shallow assign makes cloud weight heavier.\r\n        Object.assign(this.__storage, data);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('loaded', onCloud, concurrent);\r\n      // Callback\r\n      option.onceDone && option.onceDone(true, onCloud);\r\n    }\r\n    const onError = (msg, reason='')=>{\r\n      this._trigger(\"error\", \"load\", \"cloudLoadings\", reason);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('loaded', onCloud, concurrent);\r\n      console.error(`[Lycabinet]: Failed to Load the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n      // Callback\r\n      option.onceDone && option.onceDone(false, onCloud);\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localLoad();\r\n      if(onCloud) \r\n        this.options.outerLoad(pack, onSuccess, onError);\r\n      else {\r\n        this.status = _STATUS.IDLE;\r\n        this._trigger('loaded', onCloud, concurrent);\r\n        // Callback\r\n        option.onceDone && option.onceDone(true, onCloud);\r\n      }\r\n    } catch(e){\r\n      onError(e, \"unknown\");\r\n      // Callback\r\n      option.onceDone && option.onceDone(false, onCloud);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Save the cabinet to database or cloud.\r\n   * @param {*} onCloud \r\n   * @param {Boolean} concurrent Override the default options in `this.options.concurrence`\r\n   */\r\n  Lycabinet.prototype.save = function(option: AccessOptions = {}){\r\n    // merge default options.\r\n    const onCloud = (is_Defined(option.onCloud)? option.onCloud: !!this.options.outerSave) as boolean;\r\n    const concurrent = is_Defined(option.concurrent)? option.concurrent: this.options.concurrence;\r\n\r\n    // check the status for mutex protection\r\n    let check = this.options.saveMutex && !this.isVacant();\r\n    this._trigger(\"beforeSave\", check);\r\n    if( check ){\r\n      DEBUG && console.log(`[Lycabinet]: The 'save' manipulation is deserted for busy. Current Status: ${this.status} .Set 'saveMutex' false to disable it.`);\r\n      this._trigger(\"busy\");\r\n      this.options.autoLazy && this.lazySave(onCloud, concurrent);\r\n      return this;\r\n    }\r\n    \r\n    this.status = _STATUS.SAVING;\r\n\r\n    // Local save \r\n    let localSave = ()=>{\r\n      const IgnoreLocal = onCloud && !concurrent;\r\n      this._trigger('beforeLocalSave', IgnoreLocal); // give an status token before invoke.\r\n\r\n      if(IgnoreLocal){\r\n        DEBUG && console.log(\"[Lycabinet]: The local save action is ignored by options: concurrence=false.\");\r\n        return this;\r\n      }\r\n      const localApi = this.options.localInterface;\r\n      // trigger hook event beforeLocalSave. Should have a return value in event. (data)=>{ return handle(data); }\r\n      let finalData = JSON.stringify(this.__storage );\r\n      // trigger hook event after call local database to save the value. Should return a String value in event.\r\n      finalData = this._trigger('localSaved', finalData); // Only take effect on the last element.\r\n\r\n      localApi.database[localApi.setItem](this.__root, finalData);\r\n    };\r\n    \r\n\r\n    // Cloud save\r\n    const pack = [this.__root, this.__storage];\r\n    const onSuccess = ()=>{\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('saved', onCloud, concurrent);\r\n      // Callback\r\n      option.onceDone && option.onceDone(true, onCloud);\r\n    }\r\n    const onError = (msg, reason=\"cloudSavings\")=>{\r\n      this._trigger(\"error\", \"save\", reason);\r\n      this.status = _STATUS.IDLE;\r\n      this._trigger('saved', onCloud, concurrent);\r\n      console.error(`[Lycabinet]: Failed to Save the cabinet \"${this.__root}\" on cloud. ${msg}`);\r\n      // Callback\r\n      option.onceDone && option.onceDone(false, onCloud);\r\n    }\r\n\r\n    // handle this async or asyn easily.\r\n    try{\r\n      localSave();\r\n      if(onCloud) \r\n        this.options.outerSave(pack, onSuccess, onError);\r\n      else {\r\n        this.status = _STATUS.IDLE;\r\n        this._trigger('saved', onCloud, concurrent);\r\n        // Callback\r\n        option.onceDone && option.onceDone(true, onCloud);\r\n      }\r\n    } catch(e){\r\n      onError(e, 'unknown');\r\n      // Callback\r\n      option.onceDone && option.onceDone(false, onCloud);\r\n    }\r\n    return this;\r\n  }\r\n  \r\n  /**\r\n   * Map methods support.\r\n   * Iterate the first hierarchy with callback.\r\n   * @param {Function: (item, index)=>any }} callback with two params\r\n   */\r\n  Lycabinet.prototype.forEach = function(callback){\r\n    let item, index = 0;\r\n    for(let key in this.__storage){\r\n      item = this.__storage[key];\r\n      callback(item, index++); // only two params.\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Foreach methods support.\r\n   * Iterate the first hierarchy with callback.\r\n   * @param {Function: (item, index)=>any }} callback  with two params\r\n   */\r\n  Lycabinet.prototype.map = function(callback){\r\n    let item, index = 0;\r\n    for(let key in this.__storage){\r\n      item = this.__storage[key];\r\n      this.__storage[key] = callback(item, index++); // only two params.\r\n    }\r\n  }\r\n}\r\n","import { DEBUG } from \"@/utils/util\";\r\n\r\n/**\r\n * Lazy methods support.\r\n * @param {*} Lycabinet \r\n */\r\nexport function InitLazyDepartment(Lycabinet){\r\n  \r\n  /**\r\n   * Add lazySave support.\r\n   * The params is the same to save methods.\r\n   */\r\n  Lycabinet.prototype.lazySave = (function(){\r\n    var lastTime = 0;\r\n    return function(...params){\r\n      var nowTime = new Date().getTime();\r\n      // The gap is not so accurate but enough.\r\n      let judge = nowTime - lastTime > 5000; //this.options.lazyPeriod;\r\n      this._trigger(\"lazySave\", judge);\r\n      if (judge) {\r\n        lastTime = nowTime; // first!\r\n        // Use default settings\r\n        DEBUG && console.log(\"Lazy executed!\", nowTime, lastTime, judge)\r\n        this.save(...params);\r\n      }\r\n      return this;\r\n    }\r\n  })();\r\n\r\n  /**\r\n   * Just calling lazySave after save called.\r\n   * @param {*} key \r\n   * @param {*} value \r\n   * @param {...any} params parameters to lazySave (). \r\n   */\r\n  Lycabinet.prototype.lazySet = function(key, value, ...params){\r\n    this.set(key, value).lazySave(...params);\r\n    return this;\r\n  }\r\n}","/**\r\n * 提供接口利用 laction 作为支持\r\n * 利用Laction 进行 lazySave性能进一步优化和增强为节流防抖双支持模式.\r\n * 需要抽离后置执行挂载插件\r\n * 不影响单独使用\r\n * 需要在注册LactionJS实例后才能install成功\r\n * 不能加prototype，仅声明成构造器属性即可\r\n */\r\n\r\nimport { deepSupplement } from \"../utils/util\";\r\n\r\nexport function initImbedding(Lycabinet){\r\n  // Provide as a Laction plugins.\r\n  Lycabinet.install = function(lactionIns, options){\r\n    // Add mixin. Should be called before lycabinet instantiation.\r\n    Lycabinet.mixin(function(lycabinetIns){\r\n      // add some actions for laction conjunction.\r\n      deepSupplement(lycabinetIns.options, {\r\n        useLaction:{\r\n          // the target orbit of bubbled lazy message \r\n          lazyOrbitId: -1, // the last orbit. see: https://github.com/lozyue/laction.git\r\n        }\r\n      });\r\n\r\n      // Register the lazy methods hook.\r\n      lactionIns.registerHook(\r\n        {\r\n          name: lycabinetIns.__root+'_lazysave',\r\n          // apply period throttle.s\r\n          once: true, \r\n          // apply period debounce.\r\n          debounce: true, \r\n          // level: 3, // 1 Root 消息级钩子 // 默认普通消息\r\n          actions: (...params)=>{ \r\n            lycabinetIns.save(...params) \r\n          }, \r\n        },\r\n      );\r\n    });\r\n\r\n    /**\r\n     * lazySave method update\r\n     * OverWrite lazy methods with laction instances. And give it better performance and even visualizaztion.\r\n     * @param {*} lazyOrbitId the added params for laction. \r\n     */\r\n    Lycabinet.prototype.lazySave = function(...params){\r\n      params.unshift(`${this.__root}_lazysave`)\r\n      // bubble with auto period throttle and debounce.\r\n      lactionIns.bubble(params, this.options.useLaction.lazyOrbitId);\r\n      return this;\r\n    };\r\n  };\r\n}\r\n","/**\r\n * Add alias to some methods.\r\n * To custom the using habit for general users.\r\n */\r\n\r\nexport function initAlias(Lycabinet){\r\n  \r\n  Lycabinet.prototype.delete = Lycabinet.prototype.remove;\r\n\r\n  Lycabinet.prototype.read = Lycabinet.prototype.get;\r\n\r\n  Lycabinet.prototype.storage = Lycabinet.prototype.getStore;\r\n\r\n  Lycabinet.prototype.getCabinet = Lycabinet.prototype.getStore;\r\n}","/**\r\n * Add a filter before save the storage.\r\n * You should give a value to the options : includes & excludes.\r\n * (Via to JSON hook)\r\n * @param {*} Lycabinet \r\n */\r\nimport { DEBUG, deepSupplement, is_Defined } from '../utils/util';\r\n\r\nexport function addFilter(Lycabinet){\r\n  /**\r\n   * Set a filter by options\r\n   * Support dot `.` selection expression\r\n   * @param {Object} cabinetIns {includes: [], excludes:[] }\r\n   */\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    const opt = cabinetIns.options;\r\n    if(opt.includes && opt.excludes)\r\n      this.setFilter(); // auto set.\r\n    else{\r\n      deepSupplement(opt, {\r\n        includes: [], // vacant equal to all!\r\n        excludes: [],\r\n      });\r\n    }\r\n  });\r\n\r\n  Lycabinet.prototype.setFilter = function (){\r\n    const _this = this;\r\n    Object.defineProperty(this.getStore(), 'toJSON', {\r\n      configurable: true,\r\n      enumerable: false, // hide in enumeration.\r\n      value: function(){\r\n        DEBUG && console.log(_this);\r\n\r\n        let filtered = Object.create(null);\r\n        // set the basement includes.\r\n        if(_this.options.includes.length>0){\r\n          let includesKeyMap: number[]= [];\r\n          _this.options.includes.forEach( (associatedKey,index)=>{\r\n            let current = includesKeyMap[index] = associatedKey.split(\".\");\r\n            let currentStorage = _this.__storage;\r\n            current.forEach((item, i )=>{\r\n              currentStorage = currentStorage[current[i]];\r\n              // Compliment the non-final selection. \r\n              if( i +1 < current.length && is_Defined( currentStorage )){\r\n                if(!is_Defined(filtered[current[ i ]]) )\r\n                  filtered[current[i]] = {};\r\n                else\r\n                  Object.assign(filtered[current[i]], currentStorage);\r\n              }else\r\n                filtered[current[i]] = currentStorage;\r\n            });\r\n          });\r\n        // if the `includes` option is not configuratted designed, it will mean includes all by default. \r\n        }else Object.assign(filtered, _this.__storage);\r\n        // caculating the exclude filtering.\r\n        let excludesKeyMap: Array<number>= [];\r\n        _this.options.excludes.forEach( (associatedKey, index, arr)=>{\r\n          let current = excludesKeyMap[index] = associatedKey.split(\".\");\r\n          let currentStorage = filtered;\r\n          // instead of forEach to control logical better.\r\n          for(let i=0; i<current.length; i++){\r\n            if(!is_Defined(filtered[current[0]]) ) break;\r\n\r\n            if(is_Defined(currentStorage[current[i]]) )\r\n              currentStorage = currentStorage[current[i]];\r\n            else\r\n              break ;\r\n            // find the target.\r\n            if(i === arr.length-1)\r\n              currentStorage = void 0;\r\n          };\r\n        });\r\n        return filtered;\r\n      },\r\n    });\r\n  }\r\n}","/**\r\n * Using a preset dictionary to compress the json data for storage or transfer. \r\n */\r\n\r\nimport { arrayIndex } from \"../utils/util\";\r\n\r\nexport function addZip(Lycabinet){\r\n  Lycabinet.mixin(function(cabinetIns){\r\n    cabinetIns._on(\"localLoaded\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // todo...\r\n      // console.log(`beforeLocalLoad: length:${final.length}`, final, final.replaceAll(`'`, `.`));\r\n      return final;\r\n    });\r\n    cabinetIns._on(\"localSaved\", function(finalData, results){\r\n      let final = results.length? arrayIndex(results, -1): finalData;\r\n      // todo...\r\n      // console.log(`beforeLocalSave: length:${final.length}`, final, final.replaceAll(`.`, `'`));\r\n      return final;\r\n    });\r\n  });\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","arrayIndex","arr","index","undefined","length","Error","toString","curveGet","source","objPathes","interim","item","addStoreListener","invokeQueue","window","addEventListener","eve","forEach","func","invoke","remove","removeArrayItem","push","deepAssign","objs","merged","reduce","target","is_PlainObject","deepSupplement","supplement","current","is_Defined","v","is_Function","Function","indexOf","splice","IDLE","LOADING","onSetted","deepConvert","deepWatch","shallowWatch","plainObjQueue","iterate","unshift","ref","convert","internalValue","create","_parent","triggers","value","propConfig","configurable","writable","$addListener","onchange","$removeListener","handle","AccessQueue","hook","refValue","Proxy","receiver","set","newValue","rawValue","ParticalToken","Lycabinet","options","this","__init","apply","__cabinet","hasStore","__root","getStore","setStore","cabinet","removeStore","$removeStore","InitStore","_mixins","mixin","mixinFunc","__install","InitMixin","preOwnner","subscriptions","_on","name","_off","actions","_trigger","params","results","temp","counter","_once","instantOnTriggered","subs","handleFunc","_setlog","Set","keys","concat","testHandle","_logHandle","logHandle","console","log","InitEventSystem","initStorage","str","constructor","String","defaultOptions","autoload","lazyPeriod","saveMutex","autoLazy","logEvent","useSharedCabinet","shareCabinet","deepMerge","localInterface","database","localStorage","getItem","setItem","removeItem","concurrence","outerLoad","outerSave","outerClear","success","error","status","_init","writeBackflow","val","__tempStorage","Array","isArray","slice","__storage","assign","load","isVacant","backValue","removed","input","k","clear","option","concurrent","onCloud","localClear","IgnoreLocal","localApi","pack","onSuccess","onceDone","onError","msg","reason","e","localLoad","localTemp","initialData","JSON","parse","data","save","check","lazySave","localSave","finalData","stringify","callback","map","InitCore","lastTime","nowTime","Date","getTime","judge","lazySet","InitLazyDepartment","install","lactionIns","lycabinetIns","useLaction","lazyOrbitId","registerHook","once","debounce","bubble","initImbedding","delete","read","storage","getCabinet","initAlias","cabinetIns","opt","includes","excludes","setFilter","_this","filtered","includesKeyMap","associatedKey","split","currentStorage","i","excludesKeyMap","addFilter","initObserver","lazy","initWatch","$set","pathList","deep","shallow","curveSet","innerTarget","kname","$get","pathName","addObserver","final","_dirty","localContext","useLoadCache","objectSupplement","autoNotifyTabs","notifyTabs","randomToken","addCheck","addZip"],"sourceRoot":""}